/* LOS GRUPOS RECUPERACION ACUMULADA  Y POR ETAPAS ESTAN JUNTOS, Y LA INFORMACION POR ETAPA DE DEUDA LOS VALORES
SE ENCUENTRAN DESPUES DE PERIODO Y SON LOS 3 PRIMEROS */


(
SELECT *
FROM
(
	--------------------------- RECUPERACION ACUMULADA Y POR ETAPAS ------------------------------------------
	SELECT PAIS,
		   MARCA,
		   CANAL,
		   'RECUPERACION ACUMULADA Y ETAPA' GRUPO,
		   NULL AS SUB_GRUPO,
		   VAL_NOMB_PERI,
		   SUM(IMPORTE) VENTA_A_COBRAR,
		   SUM(PAG_21) PAG_21_ACUM,
		   SUM(PAG_31) PAG_31_ACUM,
		   SUM(PAG_42) PAG_42_ACUM,
		   SUM(PAG_63) PAG_63_ACUM,
		   SUM(PAG_84) PAG_84_ACUM,
		   SUM(PAG_126) PAG_126_ACUM,
		   SUM(PAG_189) PAG_189_ACUM,
	   	   SUM(IMP_PENDIENTE) SALDO_PENDIENTE,
		   SUM(PAG_21) PAG_21_ETAPA,
		   SUM(PAG_31) - SUM(PAG_21)  PAG_31_ETAPA,
		   SUM(PAG_42) - SUM(PAG_31)  PAG_42_ETAPA,
		   SUM(PAG_63) - SUM(PAG_42) PAG_63_ETAPA,
		   SUM(PAG_84) - SUM(PAG_63) PAG_84_ETAPA,
		   SUM(PAG_126) - SUM(PAG_84) PAG_126_ETAPA,
		   SUM(PAG_189) - SUM(PAG_126) PAG_189_ETAPA
	FROM
		(
		SELECT GEN_PAIS.VAL_I18N PAIS,
			   MARCA.DES_MARC MARCA,
			   GEN_CANAL.VAL_I18N CANAL,
			   VAL_NOMB_PERI,
			   SUM(IMPORTE) IMPORTE,
			   NVL(( CASE WHEN (TIPO = 'A') THEN
			   		 SUM(IMP_PENDIENTE)
			   END),0) IMP_PENDIENTE,
			   NVL((
			   	CASE WHEN (DIF_FECHA <= 21) THEN
			   			 SUM(PAG)
			    END
			   ),0) AS PAG_21,
			   NVL((
			   CASE WHEN (DIF_FECHA <= 31) THEN
			   			 SUM(PAG)
			    END
			   ),0) AS PAG_31,
			   NVL((
			   CASE WHEN (DIF_FECHA <= 42) THEN
			   			 SUM(PAG)
			    END
			   ),0) AS PAG_42,
			   NVL((
			   CASE WHEN (DIF_FECHA <= 63) THEN
			   			 SUM(PAG)
			    END
			   ),0) AS PAG_63,
			   NVL((
			   CASE WHEN (DIF_FECHA <= 84) THEN
			   			 SUM(PAG)
			    END
			   ),0) AS PAG_84,
			   NVL((
			   CASE WHEN (DIF_FECHA <= 126) THEN
			   			 SUM(PAG)
			    END
			   ),0) AS PAG_126,
			   NVL((
			   CASE WHEN (DIF_FECHA <= 189) THEN
			   			 SUM(PAG)
			    END
			   ),0) AS PAG_189
		FROM
			(
				(
	------------------------- MOVIMIENTOS DE CUENTA CORRIENTE --------------------------------------			
				SELECT PERI.PAIS_OID_PAIS,
					   PERI.MARC_OID_MARC,
					   PERI.CANA_OID_CANA,
					   PERI.VAL_NOMB_PERI,
					   TRUNC((MOV_CCC.FEC_ULTI_MOVI - MOV_CCC.FEC_DOCU)) DIF_FECHA,
					   MOV_CCC.IMP_PAGO PAG,
					   'A' AS TIPO,
					   MOV_CCC.IMP_MOVI IMPORTE,
					   MOV_CCC.IMP_PEND IMP_PENDIENTE
				FROM CCC_MOVIM_CUENT_CORRI MOV_CCC,
					 ZON_SECCI SEC,
					 CRA_PERIO PERI
				WHERE MOV_CCC.ZSCC_OID_SECC = SEC.OID_SECC
					  AND MOV_CCC.PERD_OID_PERI = PERI.OID_PERI
				--	  AND SEC.OID_SECC = 1  	   								-- PARAMETRO DE SECCION --
				--	  AND SEC.ZZON_OID_ZONA = 1 	   								-- PARAMETRO DE ZONA --
				--	  AND MOV_CCC.ZORG_OID_REGI= 1 										-- PARAMETRO DE REGION --
				--	  AND PERI.CANA_OID_CANA = 1   								-- PARAMETRO DE CANAL --
				--	  AND PERI.MARC_OID_MARC = 1   								-- PARAMETRO DE MARCA --
				--	  AND PERI.PAIS_OID_PAIS = 1 	   							-- PARAMETRO DE PAIS --
				-- 	  AND PERI.OID_PERI IN (1) 									-- PARAMETRO DE PERIODO --
				)
				UNION
				(
	-------------------- MOVIMIENTOS EN HISTORICO DE CUENTAS CORRIENTES ------------------------------------------
				SELECT PERI.PAIS_OID_PAIS,
					   PERI.MARC_OID_MARC,
					   PERI.CANA_OID_CANA,
					   PERI.VAL_NOMB_PERI,
					   (HTO.FEC_MOVI - HTO.FEC_DOCU), 
					   HTO.IMP_PAGO,
					   'B' AS TIPO,
					   HTO.IMP IMPORTE,
					   NULL AS IMP_PENDIENTE
				FROM CCC_HISTO_MOVIM_CC HTO,
					 CCC_MOVIM_CUENT_CORRI MOV_CCC,
					 ZON_SECCI SEC,
				     CRA_PERIO PERI
				WHERE MOV_CCC.ZSCC_OID_SECC = SEC.OID_SECC 
					  AND MOV_CCC.PERD_OID_PERI = PERI.OID_PERI
					  AND MOV_CCC.OID_MOVI_CC = HTO.MVCC_OID_MOVI_CC
				--	  AND SEC.OID_SECC = 1  	   								-- PARAMETRO DE SECCION --
				--	  AND SEC.ZZON_OID_ZONA = 1	   								-- PARAMETRO DE ZONA --
				--	  AND MOV_CCC.ZORG_OID_REGI = 1								-- PARAMETRO DE REGION --
				--	  AND PERI.CANA_OID_CANA = 1   								-- PARAMETRO DE CANAL --
				--	  AND PERI.MARC_OID_MARC = 1   								-- PARAMETRO DE MARCA --
				--	  AND PERI.PAIS_OID_PAIS = 1 	   							-- PARAMETRO DE PAIS --
				--	  AND PERI.OID_PERI IN (1) 									-- PARAMETRO DE PERIODO --
				) 
			) DATOS,
			(
			SELECT GEN.VAL_OID, GEN.VAL_I18N
			FROM V_GEN_I18N_SICC GEN
			WHERE GEN.ATTR_ENTI = 'SEG_PAIS'			 			
				  AND GEN.IDIO_OID_IDIO = 1										-- PARAMETRO DE IDIOMA --
			) GEN_PAIS,
			(
			SELECT GEN.VAL_OID, GEN.VAL_I18N
			FROM V_GEN_I18N_SICC GEN
			WHERE GEN.ATTR_ENTI = 'SEG_CANAL'			 			
				  AND GEN.IDIO_OID_IDIO = 1										-- PARAMETRO DE IDIOMA --
			) GEN_CANAL,
			SEG_MARCA MARCA
			WHERE DATOS.PAIS_OID_PAIS = GEN_PAIS.VAL_OID(+)
				  AND DATOS.CANA_OID_CANA = GEN_CANAL.VAL_OID(+)
				  AND DATOS.MARC_OID_MARC = MARCA.OID_MARC
		GROUP BY GEN_PAIS.VAL_I18N,
			  	 MARCA.DES_MARC,
			     GEN_CANAL.VAL_I18N,
				 VAL_NOMB_PERI,
				 DIF_FECHA,
				 TIPO,
				 IMPORTE		   
		)
	GROUP BY PAIS,
		  	 MARCA,
		     CANAL,
			 VAL_NOMB_PERI
	ORDER BY PAIS,
		  	 MARCA,
			 CANAL,
			 VAL_NOMB_PERI
)
)	
UNION ALL
(
SELECT *
FROM
(
	SELECT GEN_PAIS.VAL_I18N PAIS,
		   DES_MARC MARCA,
		   GEN_CANAL.VAL_I18N CANAL,
		   'INFORMACION POR ETAPAS DE DEUDA' GRUPO,
		   VAL_DESC||' '||VAL_EDAD_INIC||' a '||VAL_EDAD_FINA||' Dias' ETAPA,
		   VAL_NOMB_PERI CAMP,	   
		   CARTERA,
		   VALOR_RECUP,
		   SALDO,
		   NULL AS N1,
		   NULL AS N2,
		   NULL AS N3,
		   NULL AS N4,
		   NULL AS N5,
		   NULL AS N6,
		   NULL AS N7,
		   NULL AS N8,
		   NULL AS N9,
		   NULL AS N10,
		   NULL AS N11,
		   NULL AS N12,
		   NULL AS N13	   
	FROM
	(
		SELECT PERI.PAIS_OID_PAIS,
			   MARCA.DES_MARC,
			   PERI.CANA_OID_CANA,
			   PERI.VAL_NOMB_PERI,
			   ETAPA.VAL_DESC,
			   ETAPA.VAL_EDAD_INIC,
			   ETAPA.VAL_EDAD_FINA,
			   SUM(ASI_COB.IMP_DEUD_CANC) VALOR_RECUP,
			   SUM(ASI_COB.IMP_DEUD_ASIG) CARTERA,
			   SUM(ASI_COB.IMP_DEUD_ASIG) - SUM(ASI_COB.IMP_DEUD_CANC) SALDO	   
		FROM COB_ETAPA_DEUDA ETAPA,
			 COB_CRONO_COBRA CRO_COB,
			 COB_ASIGN_COBRA ASI_COB,
			 CCC_MOVIM_CUENT_CORRI MCC,
			 ZON_SECCI SEC,
			 CRA_PERIO PERI,
			 SEG_MARCA MARCA 
		WHERE ETAPA.IND_EXCL = 1
			  AND CRO_COB.OID_CRON_COBR = ASI_COB.CRCO_OID_CRON_COBR
			  AND ASI_COB.MVCC_OID_MOVI_CC = MCC.OID_MOVI_CC
			  AND CRO_COB.ETDE_OID_ETAP_DEUD = ETAPA.OID_ETAP_DEUD
			  AND MCC.ZSCC_OID_SECC = SEC.OID_SECC
			  AND MCC.PERD_OID_PERI = PERI.OID_PERI
			  AND PERI.MARC_OID_MARC = MARCA.OID_MARC
		--	  AND SEC.OID_SECC = 1  	   								-- PARAMETRO DE SECCION --
		--	  AND SEC.ZZON_OID_ZONA = 1 	   								-- PARAMETRO DE ZONA --
		--	  AND MCC.ZORG_OID_REGI= 1 										-- PARAMETRO DE REGION --
		--	  AND PERI.CANA_OID_CANA = 1   								-- PARAMETRO DE CANAL --
		--	  AND PERI.MARC_OID_MARC = 1   								-- PARAMETRO DE MARCA --
		--	  AND PERI.PAIS_OID_PAIS = 1 	   							-- PARAMETRO DE PAIS --
		-- 	  AND PERI.OID_PERI IN (1) 									-- PARAMETRO DE PERIODO --
		GROUP BY PERI.PAIS_OID_PAIS,
			  	 MARCA.DES_MARC,
				 PERI.CANA_OID_CANA,
				 PERI.VAL_NOMB_PERI,
				 ETAPA.VAL_DESC,
				 ETAPA.VAL_EDAD_INIC,
				 ETAPA.VAL_EDAD_FINA
	) DATOS,
	(
	SELECT GEN.VAL_OID, GEN.VAL_I18N
	FROM V_GEN_I18N_SICC GEN
	WHERE GEN.ATTR_ENTI = 'SEG_PAIS'
		  AND GEN.IDIO_OID_IDIO = 1	 									-- PARAMETRO DE IDIOMA --
	) GEN_PAIS,
	(
	SELECT GEN.VAL_OID, GEN.VAL_I18N
	FROM V_GEN_I18N_SICC GEN
	WHERE GEN.ATTR_ENTI = 'SEG_CANAL'
		  AND GEN.IDIO_OID_IDIO = 1	 									-- PARAMETRO DE IDIOMA --
	) GEN_CANAL
	WHERE DATOS.PAIS_OID_PAIS = GEN_PAIS.VAL_OID(+)
		  AND DATOS.CANA_OID_CANA = GEN_CANAL.VAL_OID(+)
	ORDER BY VAL_EDAD_INIC
)
)		 
	  


























