 SELECT * FROM  (       SELECT *       FROM       (                  SELECT ACUM.GRUPO1,                      ACUM.GRUPO2,                      ACUM.NEGOCIO NEGOCIO_ACUM,                      ACUM.NEGOCIO NEGOCIO_DIARIO,                      ACUM.MONTO_X_NEGOCIO MONTO_X_NEGOCIO_ACUM,                      ACUM.UNID_X_NEGOCIO UNID_X_NEGOCIO_ACUM,                      ROUND(ACUM.PORC_PART_NEGOCIO,2) PORC_PART_NEGOCIO_ACUM,                       ROUND(ACUM.PORC_VS_VENTA_NEGOCIO,2) PORC_VS_VENTA_NEGOCIO_ACUM,                      NVL(DIARIO.MONTO_X_NEGOCIO,0) MONTO_X_NEGOCIO_DIARIO,                      NVL(DIARIO.UNID_X_NEGOCIO,0) UNID_X_NEGOCIO_DIARIO,                      ROUND(NVL(DIARIO.PORC_PART_NEGOCIO,0),2) PORC_PART_NEGOCIO_DIARIO,                       ROUND(NVL(DIARIO.PORC_VS_VENTA_NEGOCIO,0),2) PORC_VS_VENTA_NEGOCIO_DIARIO,                      SUM(ACUM.MONTO_X_NEGOCIO) OVER (PARTITION BY 1) TOTAL_FAL_ACUM_NEGOCIO,                      NVL(SUM(DIARIO.MONTO_X_NEGOCIO) OVER (PARTITION BY 1),0) TOTAL_FAL_DIARIO_NEGOCIO             FROM                   (                         SELECT 'MOVIM' AS GRUPO1,                                 'NEGOCIO' AS GRUPO2,                                 NEGOCIO,                                 SUM(UND_FALTANTES) UNID_X_NEGOCIO,                                 SUM(MONTO_NETO) MONTO_X_NEGOCIO,                                 DECODE(SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1),0,0,(SUM(UND_FALTANTES)/SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1))*100) PORC_PART_NEGOCIO,                                  DECODE(SUM(UND_ATEN),0,0,(SUM(UND_FALTANTES)/SUM(UND_ATEN))*100) PORC_VS_VENTA_NEGOCIO                         FROM                         (                              SELECT MPR.OID_PROD PROD,                                       GEN_PRO.VAL_I18N DESC_PRODUCTO,                                       SMP.DES_MARC_PROD MARCA_PRODUCTO,                                       GEN_NEG.VAL_I18N NEGOCIO,                                       SUM((PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)*PSP.VAL_PREC_NETO_TOTA_LOCA) MONTO_NETO,                                       SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN) UND_FALTANTES,                                       SUM(PSP.NUM_UNID_ATEN) UND_ATEN                                  FROM PED_SOLIC_CABEC PSC,                                     PED_SOLIC_POSIC PSP,                                     MAE_NEGOC NEG,                                     MAE_UNIDA_NEGOC MUN,                                     MAE_PRODU MPR,                                     SEG_ACCES ACC,                                     SEG_SUBAC SAC,                                     SEG_MARCA_PRODU SMP,                                     (                                        SELECT GEN.VAL_I18N, GEN.VAL_OID                                          FROM V_GEN_I18N_SICC GEN                                          WHERE GEN.ATTR_ENTI = 'MAE_PRODU'                                                  AND GEN.IDIO_OID_IDIO =  1                                                                              ) GEN_PRO,                                     (                                        SELECT GEN.VAL_I18N, GEN.VAL_OID                                          FROM V_GEN_I18N_SICC GEN                                          WHERE GEN.ATTR_ENTI = 'MAE_NEGOC'                                                  AND GEN.IDIO_OID_IDIO =  1                                                                              ) GEN_NEG                                WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE                                       AND PSC.FEC_FACT = TO_DATE(SYSDATE-1)                                       AND PSP.NUM_UNID_POR_ATEN > PSP.NUM_UNID_ATEN                                      AND PSP.PROD_OID_PROD = MPR.OID_PROD                                      AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO                                      AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO                                      AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE                                      AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                                      AND MPR.OID_PROD = GEN_PRO.VAL_OID(+)                                      AND NEG.OID_NEGO = GEN_NEG.VAL_OID(+)                                      AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD                                      AND PSP.ESPO_OID_ESTA_POSI  < > 2                                      AND PSC.IND_PEDI_PRUE  < > 1                                      AND PSC.IND_TS_NO_CONSO = 1                                      AND PSC.PAIS_OID_PAIS =  1                                                                      AND PSC.PERD_OID_PERI =  57                                                                    AND NEG.OID_NEGO IN ( 1 )                                         AND MUN.OID_UNID_NEGO IN ( 1 )                                         AND ACC.CANA_OID_CANA =  1                                                                          AND ACC.OID_ACCE =  1                                                                       GROUP BY MPR.OID_PROD,                                           GEN_PRO.VAL_I18N,                                           SMP.DES_MARC_PROD,                                           GEN_NEG.VAL_I18N                         )                         GROUP BY NEGOCIO                   ) DIARIO,                   (                         SELECT 'MOVIM' AS GRUPO1,                                 'NEGOCIO' AS GRUPO2,                                 NEGOCIO,                                 SUM(UND_FALTANTES) UNID_X_NEGOCIO,                                 SUM(MONTO_NETO)  MONTO_X_NEGOCIO,                                 DECODE(SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1),0,0,(SUM(UND_FALTANTES)/SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1))*100) PORC_PART_NEGOCIO,                                  DECODE(SUM(UND_ATEN) ,0,0,(SUM(UND_FALTANTES)/SUM(UND_ATEN))*100) PORC_VS_VENTA_NEGOCIO                         FROM                         (                              SELECT MPR.OID_PROD PROD,                                       GEN_PRO.VAL_I18N DESC_PRODUCTO,                                       SMP.DES_MARC_PROD MARCA_PRODUCTO,                                       GEN_NEG.VAL_I18N NEGOCIO,                                       SUM((PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)*PSP.VAL_PREC_NETO_TOTA_LOCA) MONTO_NETO,                                       SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN) UND_FALTANTES,                                       SUM(PSP.NUM_UNID_ATEN) UND_ATEN                                  FROM PED_SOLIC_CABEC PSC,                                     PED_SOLIC_POSIC PSP,                                     MAE_NEGOC NEG,                                     MAE_UNIDA_NEGOC MUN,                                     MAE_PRODU MPR,                                     SEG_ACCES ACC,                                     SEG_SUBAC SAC,                                     SEG_MARCA_PRODU SMP,                                     (                                        SELECT GEN.VAL_I18N, GEN.VAL_OID                                          FROM V_GEN_I18N_SICC GEN                                          WHERE GEN.ATTR_ENTI = 'MAE_PRODU'                                                  AND GEN.IDIO_OID_IDIO =  1                                                         ) GEN_PRO,                                     (                                        SELECT GEN.VAL_I18N, GEN.VAL_OID                                          FROM V_GEN_I18N_SICC GEN                                          WHERE GEN.ATTR_ENTI = 'MAE_NEGOC'                                                  AND GEN.IDIO_OID_IDIO =  1                                                         ) GEN_NEG                                WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE                                       AND PSP.NUM_UNID_POR_ATEN > PSP.NUM_UNID_ATEN                                      AND PSP.PROD_OID_PROD = MPR.OID_PROD                                      AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO                                      AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO                                      AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE                                      AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                                      AND MPR.OID_PROD = GEN_PRO.VAL_OID(+)                                      AND NEG.OID_NEGO = GEN_NEG.VAL_OID(+)                                      AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD                                      AND PSP.ESPO_OID_ESTA_POSI  < > 2                                      AND PSC.IND_PEDI_PRUE  < > 1                                      AND PSC.IND_TS_NO_CONSO = 1                                      AND PSC.PAIS_OID_PAIS =  1                                                                      AND PSC.PERD_OID_PERI =  57                                                                    AND NEG.OID_NEGO IN ( 1 )                                         AND MUN.OID_UNID_NEGO IN ( 1 )                                         AND ACC.CANA_OID_CANA =  1                                                              AND ACC.OID_ACCE =  1                                                            GROUP BY MPR.OID_PROD,                                           GEN_PRO.VAL_I18N,                                           SMP.DES_MARC_PROD,                                           GEN_NEG.VAL_I18N                         )                         GROUP BY NEGOCIO                   ) ACUM             WHERE DIARIO.GRUPO2(+) = ACUM.GRUPO2                     AND DIARIO.NEGOCIO(+) = ACUM.NEGOCIO             )                    UNION ALL                  (                    SELECT ACUM.GRUPO1,                      ACUM.GRUPO2,                      ACUM.MARCA_PRODUCTO MARCA_PRODUCTO_ACUM,                      ACUM.MARCA_PRODUCTO MARCA_PRODUCTO_DIARIO,                      ACUM.MONTO_X_MARCA MONTO_X_MARCA_ACUM,                      ACUM.UNID_X_MARCA UNID_X_MARCA_ACUM,                      ROUND(ACUM.PORC_PART_MARCA,2) PORC_PART_MARCA_ACUM,                       ROUND(ACUM.PORC_VS_VENTA_MARCA,2) PORC_VS_VENTA_MARCA_ACUM,                      NVL(DIARIO.MONTO_X_MARCA,0) MONTO_X_MARCA_DIARIO,                      NVL(DIARIO.UNID_X_MARCA,0) UNID_X_MARCA_DIARIO,                      ROUND(NVL(DIARIO.PORC_PART_MARCA,0),2) PORC_PART_MARCA_DIARIO,                       ROUND(NVL(DIARIO.PORC_VS_VENTA_MARCA,0),2) PORC_VS_VENTA_MARCA_DIARIO,                      SUM(ACUM.MONTO_X_MARCA) OVER (PARTITION BY 1) TOTAL_FAL_ACUM_MARCA,                      NVL(SUM(DIARIO.MONTO_X_MARCA) OVER (PARTITION BY 1),0) TOTAL_FAL_DIARIO_MARCA             FROM                   (                         SELECT 'MOVIM' AS GRUPO1,                                 'MARCA' AS GRUPO2,                                 MARCA_PRODUCTO,                                 SUM(UND_FALTANTES) UNID_X_MARCA,                                 SUM(MONTO_NETO) MONTO_X_MARCA,                                 DECODE(SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1),0,0,(SUM(UND_FALTANTES)/SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1))*100) PORC_PART_MARCA,                                  DECODE(SUM(UND_ATEN),0,0,(SUM(UND_FALTANTES)/SUM(UND_ATEN))*100) PORC_VS_VENTA_MARCA                         FROM                         (                              SELECT MPR.OID_PROD PROD,                                       GEN_PRO.VAL_I18N DESC_PRODUCTO,                                       SMP.DES_MARC_PROD MARCA_PRODUCTO,                                       GEN_NEG.VAL_I18N NEGOCIO,                                       SUM((PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)*PSP.VAL_PREC_NETO_TOTA_LOCA) MONTO_NETO,                                       SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN) UND_FALTANTES,                                       SUM(PSP.NUM_UNID_ATEN) UND_ATEN                                  FROM PED_SOLIC_CABEC PSC,                                     PED_SOLIC_POSIC PSP,                                     MAE_NEGOC NEG,                                     MAE_UNIDA_NEGOC MUN,                                     MAE_PRODU MPR,                                     SEG_ACCES ACC,                                     SEG_SUBAC SAC,                                     SEG_MARCA_PRODU SMP,                                     (                                        SELECT GEN.VAL_I18N, GEN.VAL_OID                                          FROM V_GEN_I18N_SICC GEN                                          WHERE GEN.ATTR_ENTI = 'MAE_PRODU'                                                  AND GEN.IDIO_OID_IDIO =  1                                      ) GEN_PRO,                                     (                                        SELECT GEN.VAL_I18N, GEN.VAL_OID                                          FROM V_GEN_I18N_SICC GEN                                          WHERE GEN.ATTR_ENTI = 'MAE_NEGOC'                                                  AND GEN.IDIO_OID_IDIO =  1                                      ) GEN_NEG                                WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE                                       AND PSC.FEC_FACT = TO_DATE(SYSDATE-1)                                       AND PSP.NUM_UNID_POR_ATEN > PSP.NUM_UNID_ATEN                                      AND PSP.PROD_OID_PROD = MPR.OID_PROD                                      AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO                                      AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO                                      AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE                                      AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                                      AND MPR.OID_PROD = GEN_PRO.VAL_OID(+)                                      AND NEG.OID_NEGO = GEN_NEG.VAL_OID(+)                                      AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD                                      AND PSP.ESPO_OID_ESTA_POSI  < > 2                                      AND PSC.IND_PEDI_PRUE  < > 1                                      AND PSC.IND_TS_NO_CONSO = 1                                      AND PSC.PAIS_OID_PAIS =  1                                                       AND PSC.PERD_OID_PERI =  57                                                     AND NEG.OID_NEGO IN ( 1 )                                            AND MUN.OID_UNID_NEGO IN ( 1 )                                         AND ACC.CANA_OID_CANA =  1                                                                          AND ACC.OID_ACCE =  1                                                                       GROUP BY MPR.OID_PROD,                                           GEN_PRO.VAL_I18N,                                           SMP.DES_MARC_PROD,                                           GEN_NEG.VAL_I18N                         )                         GROUP BY MARCA_PRODUCTO                   ) DIARIO,                   (                         SELECT 'MOVIM' AS GRUPO1,                                 'MARCA' AS GRUPO2,                                 MARCA_PRODUCTO,                                 SUM(UND_FALTANTES) UNID_X_MARCA,                                 SUM(MONTO_NETO)  MONTO_X_MARCA,                                 DECODE(SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1),0,0,(SUM(UND_FALTANTES)/SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1))*100) PORC_PART_MARCA,                                  DECODE(SUM(UND_ATEN) ,0,0,(SUM(UND_FALTANTES)/SUM(UND_ATEN))*100) PORC_VS_VENTA_MARCA                         FROM                         (                              SELECT MPR.OID_PROD PROD,                                       GEN_PRO.VAL_I18N DESC_PRODUCTO,                                       SMP.DES_MARC_PROD MARCA_PRODUCTO,                                       GEN_NEG.VAL_I18N NEGOCIO,                                       SUM((PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)*PSP.VAL_PREC_NETO_TOTA_LOCA) MONTO_NETO,                                       SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN) UND_FALTANTES,                                       SUM(PSP.NUM_UNID_ATEN) UND_ATEN                                  FROM PED_SOLIC_CABEC PSC,                                     PED_SOLIC_POSIC PSP,                                     MAE_NEGOC NEG,                                     MAE_UNIDA_NEGOC MUN,                                     MAE_PRODU MPR,                                     SEG_ACCES ACC,                                     SEG_SUBAC SAC,                                     SEG_MARCA_PRODU SMP,                                     (                                        SELECT GEN.VAL_I18N, GEN.VAL_OID                                          FROM V_GEN_I18N_SICC GEN                                          WHERE GEN.ATTR_ENTI = 'MAE_PRODU'                                                  AND GEN.IDIO_OID_IDIO =  1                                             ) GEN_PRO,                                     (                                        SELECT GEN.VAL_I18N, GEN.VAL_OID                                          FROM V_GEN_I18N_SICC GEN                                          WHERE GEN.ATTR_ENTI = 'MAE_NEGOC'                                                  AND GEN.IDIO_OID_IDIO =  1                                             ) GEN_NEG                                WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE                                       AND PSP.NUM_UNID_POR_ATEN > PSP.NUM_UNID_ATEN                                      AND PSP.PROD_OID_PROD = MPR.OID_PROD                                      AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO                                      AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO                                      AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE                                      AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                                      AND MPR.OID_PROD = GEN_PRO.VAL_OID(+)                                      AND NEG.OID_NEGO = GEN_NEG.VAL_OID(+)                                      AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD                                      AND PSP.ESPO_OID_ESTA_POSI  < > 2                                      AND PSC.IND_PEDI_PRUE  < > 1                                      AND PSC.IND_TS_NO_CONSO = 1                                      AND PSC.PAIS_OID_PAIS =  1                                                                      AND PSC.PERD_OID_PERI =  57                                                               AND NEG.OID_NEGO IN ( 1 )                                              AND MUN.OID_UNID_NEGO IN ( 1 )                                         AND ACC.CANA_OID_CANA =  1                                                                          AND ACC.OID_ACCE =  1                                                                       GROUP BY MPR.OID_PROD,                                           GEN_PRO.VAL_I18N,                                           SMP.DES_MARC_PROD,                                           GEN_NEG.VAL_I18N                         )                         GROUP BY MARCA_PRODUCTO                   ) ACUM             WHERE DIARIO.GRUPO2(+) = ACUM.GRUPO2                     AND DIARIO.MARCA_PRODUCTO(+) = ACUM.MARCA_PRODUCTO       ) ) UNION ALL (          SELECT ACUM.GRUPO1,               ACUM.NEGOCIO NEGOCIO_ACUM,               ACUM.DESC_PRODUCTO DESC_PRODUCTO_ACUM,            DIARIO.DESC_PRODUCTO DESC_PRODUCTO_DIARIO,                ACUM.MONTO_NETO,               ACUM.UND_FALTANTES UND_FALTANTES_ACUM,               ROUND(ACUM.PORC_PART_PRODUCTO,2) PORC_PART_PRODUCTO_ACUM,               ROUND(ACUM.PORC_VENTA_PRODUCTO,2) PORC_VENTA_PRODUCTO_ACUM,               CASE WHEN (DIARIO.DESC_PRODUCTO IS NOT NULL)  THEN                     NVL(DIARIO.MONTO_NETO, 0)               END MONTO_NETO_DIARIO,               CASE WHEN (DIARIO.DESC_PRODUCTO IS NOT NULL)  THEN                     NVL(DIARIO.UND_FALTANTES, 0)               END UND_FALTANTES_DIARIO,               CASE WHEN (DIARIO.DESC_PRODUCTO IS NOT NULL)  THEN                      ROUND(NVL(DIARIO.PORC_PART_PRODUCTO, 0),2)                END PORC_PART_PRODUCTO_DIARIO,               CASE WHEN (DIARIO.DESC_PRODUCTO IS NOT NULL)  THEN                      ROUND(NVL(DIARIO.PORC_VENTA_PRODUCTO,0),2)                END PORC_VENTA_PRODUCTO_DIARIO,               NULL AS TOTAL1,               NULL AS TOTAL2          FROM               (               SELECT *               FROM               (                   SELECT 'PCRI' GRUPO1,                            GEN_PRO.VAL_I18N DESC_PRODUCTO,                            SMP.DES_MARC_PROD MARCA_PRODUCTO,                            GEN_NEG.VAL_I18N NEGOCIO,                            SUM((PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)*PSP.VAL_PREC_NETO_TOTA_LOCA) MONTO_NETO,                            SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN) UND_FALTANTES,                            DECODE(SUM(SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)) OVER (PARTITION BY GEN_NEG.VAL_I18N , SMP.DES_MARC_PROD),0,0,(SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)/SUM(SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)) OVER (PARTITION BY GEN_NEG.VAL_I18N ,SMP.DES_MARC_PROD))*100) PORC_PART_PRODUCTO,                            DECODE(SUM(PSP.NUM_UNID_ATEN),0,0,(SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)/SUM(PSP.NUM_UNID_ATEN))*100) PORC_VENTA_PRODUCTO,                            SUM(1) OVER (PARTITION BY GEN_NEG.VAL_I18N ORDER BY SUM((PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)*PSP.VAL_PREC_NETO_TOTA_LOCA) DESC,MPR.OID_PROD) CONTROL                   FROM PED_SOLIC_CABEC PSC,                          PED_SOLIC_POSIC PSP,                          MAE_NEGOC NEG,                          MAE_UNIDA_NEGOC MUN,                          MAE_PRODU MPR,                          SEG_ACCES ACC,                          SEG_SUBAC SAC,                          SEG_MARCA_PRODU SMP,                          (                             SELECT GEN.VAL_I18N, GEN.VAL_OID                              FROM V_GEN_I18N_SICC GEN                              WHERE GEN.ATTR_ENTI = 'MAE_PRODU'                                      AND GEN.IDIO_OID_IDIO =  1                                                          ) GEN_PRO,                          (                             SELECT GEN.VAL_I18N, GEN.VAL_OID                              FROM V_GEN_I18N_SICC GEN                              WHERE GEN.ATTR_ENTI = 'MAE_NEGOC'                                      AND GEN.IDIO_OID_IDIO =  1                                                          ) GEN_NEG                     WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE                            AND PSP.NUM_UNID_POR_ATEN > PSP.NUM_UNID_ATEN                           AND PSP.PROD_OID_PROD = MPR.OID_PROD                           AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO                           AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO                           AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE                           AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                           AND MPR.OID_PROD = GEN_PRO.VAL_OID(+)                           AND NEG.OID_NEGO = GEN_NEG.VAL_OID(+)                           AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD                                AND PSP.ESPO_OID_ESTA_POSI  < > 2                                AND PSC.IND_PEDI_PRUE  < > 1                                 AND PSC.IND_TS_NO_CONSO = 1                           AND PSC.PAIS_OID_PAIS =  1                                                               AND PSC.PERD_OID_PERI =  57                                   AND NEG.OID_NEGO IN ( 1 )                                    AND MUN.OID_UNID_NEGO IN ( 1 )                                   AND ACC.CANA_OID_CANA =  1                                                                      AND ACC.OID_ACCE =  1                                                         GROUP BY MPR.OID_PROD,                                GEN_PRO.VAL_I18N,                               SMP.DES_MARC_PROD,                               GEN_NEG.VAL_I18N             )             WHERE CONTROL  < = 8         ) ACUM,            (                        SELECT *               FROM               (                   SELECT 'PCRI' GRUPO1,                            GEN_PRO.VAL_I18N DESC_PRODUCTO,                            SMP.DES_MARC_PROD MARCA_PRODUCTO,                            GEN_NEG.VAL_I18N NEGOCIO,                            SUM((PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)*PSP.VAL_PREC_NETO_TOTA_LOCA) MONTO_NETO,                            SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN) UND_FALTANTES,                            DECODE(SUM(SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)) OVER (PARTITION BY GEN_NEG.VAL_I18N,SMP.DES_MARC_PROD),0,0,(SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)/SUM(SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)) OVER (PARTITION BY GEN_NEG.VAL_I18N ,SMP.DES_MARC_PROD))*100) PORC_PART_PRODUCTO,                            DECODE(SUM(PSP.NUM_UNID_ATEN),0,0,(SUM(PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)/SUM(PSP.NUM_UNID_ATEN))*100) PORC_VENTA_PRODUCTO,                            SUM(1) OVER (PARTITION BY GEN_NEG.VAL_I18N ORDER BY SUM((PSP.NUM_UNID_POR_ATEN-PSP.NUM_UNID_ATEN)*PSP.VAL_PREC_NETO_TOTA_LOCA) DESC,MPR.OID_PROD) CONTROL                   FROM PED_SOLIC_CABEC PSC,                          PED_SOLIC_POSIC PSP,                          MAE_NEGOC NEG,                          MAE_UNIDA_NEGOC MUN,                          MAE_PRODU MPR,                          SEG_ACCES ACC,                          SEG_SUBAC SAC,                          SEG_MARCA_PRODU SMP,                          (                             SELECT GEN.VAL_I18N, GEN.VAL_OID                              FROM V_GEN_I18N_SICC GEN                              WHERE GEN.ATTR_ENTI = 'MAE_PRODU'                                      AND GEN.IDIO_OID_IDIO =  1                                                    ) GEN_PRO,                          (                             SELECT GEN.VAL_I18N, GEN.VAL_OID                              FROM V_GEN_I18N_SICC GEN                              WHERE GEN.ATTR_ENTI = 'MAE_NEGOC'                                      AND GEN.IDIO_OID_IDIO =  1                                                    ) GEN_NEG                     WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE                            AND PSP.NUM_UNID_POR_ATEN > PSP.NUM_UNID_ATEN                           AND PSC.FEC_FACT = TO_DATE(SYSDATE-1)                            AND PSP.PROD_OID_PROD = MPR.OID_PROD                           AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO                           AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO                           AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE                           AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                           AND MPR.OID_PROD = GEN_PRO.VAL_OID(+)                           AND NEG.OID_NEGO = GEN_NEG.VAL_OID(+)                           AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD                           AND PSP.ESPO_OID_ESTA_POSI  < > 2                           AND PSC.IND_PEDI_PRUE  < > 1                           AND PSC.IND_TS_NO_CONSO = 1                           AND PSC.PAIS_OID_PAIS =  1                                AND PSC.PERD_OID_PERI =  57                             AND NEG.OID_NEGO IN ( 1 )                              AND MUN.OID_UNID_NEGO IN ( 1 )                             AND ACC.CANA_OID_CANA =  1                                                               AND ACC.OID_ACCE =  1                                                         GROUP BY MPR.OID_PROD,                                GEN_PRO.VAL_I18N,                               SMP.DES_MARC_PROD,                               GEN_NEG.VAL_I18N             )             WHERE CONTROL  < = 8       ) DIARIO WHERE ACUM.NEGOCIO = DIARIO.NEGOCIO(+)         AND ACUM.CONTROL = DIARIO.CONTROL(+) )     