 SELECT SUBG, 	   NUM_CONC, 	   GRUPO_DES, 	   GRUPO_HAS, 	   NRO_CON_NO_CONS, 	   PORC_CONS_NO_CONS, 	   SUM(PORC_CONS_NO_CONS) OVER  	   (PARTITION BY SUBG, NUM_CONC ORDER BY ROWNUM) PORC_ACUM,        INC_1_PED,        PORC_INC_1_PED,        INC_2_PED,        PORC_INC_2_PED,        INC_3_PED,        PORC_INC_3_PED,	           INC_4_PED,        PORC_INC_4_PED,	           INC_5_PED,        PORC_INC_5_PED,	           INC_6_PED,        PORC_INC_6_PED,	         INC_7_PED,        PORC_INC_7_PED,	        INC_8_PED,        PORC_INC_8_PED,	           INC_9_PED,        PORC_INC_9_PED,	           INC_10_PED,        PORC_INC_10_PED	   	   	   	   	   	   	   	   	    FROM ( 	SELECT SUBG, 		   NUM_CONC, 		   GRUPO, 		   CASE WHEN (GRUPO = 1000) THEN 		   	   GRUPO 		   ELSE 		   	   GRUPO + 1 		   END GRUPO_DES, 		   CASE WHEN (GRUPO  <  3000) THEN 		   		GRUPO + 500 		   ELSE 		   	    GRUPO + 1000 		   END GRUPO_HAS,	 		   COUNT(*) NRO_CON_NO_CONS, 		   (COUNT(*)/TOT_CON)*100 PORC_CONS_NO_CONS, 		   CASE WHEN (  1 = 1  		    		        and  1   < = 1   		    		    		        and 	1  < =  1     		   ) THEN  		   		SUM(INC_1_PED) 		   ELSE 		   	   -1  		   END INC_1_PED, 	   	   CASE WHEN ( 1=1  	   	           and  1   < = 1   		        and 	1  < =  1    ) THEN  		   	   (SUM(INC_1_PED)/COUNT(*))*100  		   ELSE 		   	   -1  	       END PORC_INC_1_PED, 		   CASE WHEN (  1=1   		        and  1   < = 2   		        and 	2  < =  1    ) THEN  		   	   SUM(INC_2_PED) 		   ELSE 		   	   -1 		   END INC_2_PED, 	       CASE WHEN ( 1=1  	             and  1   < = 2   		        and 	2  < =  1    ) THEN  		      (SUM(INC_2_PED)/COUNT(*))*100 		   ELSE 		   	   -1 		   END PORC_INC_2_PED, 		   CASE WHEN (  1=1   		        and  1   < = 3   		        and 	3  < =  1    ) THEN  	   	   		SUM(INC_3_PED)  		   ELSE 		   	   -1 		   END INC_3_PED, 	       CASE WHEN ( 1=1  	             and  1   < = 3   		        and 	3  < =  1    ) THEN  		       (SUM(INC_3_PED)/COUNT(*))*100 		   ELSE 		   	   -1 		   END PORC_INC_3_PED,	    		   CASE WHEN (  1=1  		         and  1   < = 4   		        and 	4  < =  1    ) THEN  		   		SUM(INC_4_PED) 		   ELSE 		   	   -1 		   END INC_4_PED, 		   CASE WHEN (  1=1  		         and  1   < = 4   		        and 	4  < =  1    ) THEN  		   	   (SUM(INC_4_PED)/COUNT(*))*100 		   ELSE 		   	   -1 		   END PORC_INC_4_PED,	    	       CASE WHEN (  1=1  	             and  1   < = 5   		        and 	5  < =  1    ) THEN  		   	   SUM(INC_5_PED) 		   ELSE 		   	   -1 		   END INC_5_PED, 		   CASE WHEN (  1=1   		        and  1   < = 5   		        and 	5  < =  1    ) THEN  		   	   (SUM(INC_5_PED)/COUNT(*))*100 		   ELSE 		   	   -1 		   END PORC_INC_5_PED,	    		   CASE WHEN (  1=1  		          and  1   < = 6   		        and 	6  < =  1    ) THEN  		        SUM(INC_6_PED) 		   ELSE 		   	   -1 		   END INC_6_PED, 		   CASE WHEN (  1=1  		         and  1   < = 6   		        and 	6  < =  1    ) THEN  		   		(SUM(INC_6_PED)/COUNT(*))*100  		   ELSE 		   	   -1 		   END PORC_INC_6_PED,	  	       CASE WHEN (  1=1  	            and  1   < = 7   		        and 	7  < =  1    ) THEN  		      	   SUM(INC_7_PED) 		   ELSE 		   	   -1 		   END INC_7_PED, 		   CASE WHEN (  1=1  		       and  1   < = 7   		        and 	7  < =  1    ) THEN  		   		(SUM(INC_7_PED)/COUNT(*))*100 		   ELSE 		   	   -1 		   END PORC_INC_7_PED,	 		   CASE WHEN (  1=1  		         and  1   < = 8   		        and 	8  < =  1    ) THEN  		      	   SUM(INC_8_PED)  		   ELSE 		   	   -1 		   END INC_8_PED, 		   CASE WHEN (  1=1  		         and  1   < = 8   		        and 	8  < =  1    ) THEN  		   	   (SUM(INC_8_PED)/COUNT(*))*100 		   ELSE 		   	   -1 		   END PORC_INC_8_PED,	    		   CASE WHEN (   1=1   		         and  1   < = 9   		        and 	9  < =  1    ) THEN  		      	   SUM(INC_9_PED) 		   ELSE 		   	   -1 		   END INC_9_PED, 		   CASE WHEN (   1=1  		       and  1   < = 9   		        and 	9  < =  1    ) THEN  		   	   (SUM(INC_9_PED)/COUNT(*))*100 		   ELSE 		   	   -1 		   END PORC_INC_9_PED,	    	       CASE WHEN (  1=1  	              and  1   < = 10   		        and 	10  < =  1    ) THEN  		      	   SUM(INC_10_PED) 		   ELSE 		   	   -1 		   END INC_10_PED, 		   CASE WHEN (  1=1   		        and  1   < = 10   		        and 	10  < =  1    ) THEN  		   	   (SUM(INC_10_PED)/COUNT(*))*100 		   ELSE 		   	   -1 		   END PORC_INC_10_PED	   	   	   	   	   	   	   	   	    	FROM 	( 		SELECT SUBG, 			   NUM_CONC, 			   GRUPO, 			   CLIEN, 		   	   (COUNT(CLIEN) OVER (PARTITION BY SUBG, NUM_CONC ORDER BY 1)) TOT_CON, 		   	   CASE WHEN (SUM(PERI_SIN_PED) = 1) THEN 			   		1 			   ELSE 			   	    0 			   END INC_1_PED, 			   CASE WHEN (SUM(PERI_SIN_PED) = 2) THEN 			   		1 			   ELSE 			   	    0 			   END INC_2_PED, 			   CASE WHEN (SUM(PERI_SIN_PED) = 3) THEN 			   		1 			   ELSE 			   	    0			 			   END INC_3_PED, 			   CASE WHEN (SUM(PERI_SIN_PED) = 4) THEN 			   		1 			   ELSE  			   		0 			   END INC_4_PED, 			   CASE WHEN (SUM(PERI_SIN_PED) = 5) THEN 			   		1 			   ELSE 			   	    0 			   END INC_5_PED, 			   CASE WHEN (SUM(PERI_SIN_PED) = 6) THEN 			   		1 			   ELSE 			   	    0 			   END INC_6_PED, 			   CASE WHEN (SUM(PERI_SIN_PED) = 7) THEN 			   		1 			   ELSE 			        0 			   END INC_7_PED, 			   CASE WHEN (SUM(PERI_SIN_PED) = 8) THEN 			   		1 			   ELSE 			   	    0 			   END INC_8_PED, 		   	   CASE WHEN (SUM(PERI_SIN_PED) = 9) THEN 			   		1 			   ELSE 			   	    0 			   END INC_9_PED, 			   CASE WHEN (SUM(PERI_SIN_PED) = 10) THEN 			   		1 			   ELSE 			   	    0	   	     			   END INC_10_PED		    		FROM  		( 			SELECT DAT.SUBG, 				   DAT.CLIEN, 				   DAT.NUM_CONC, 				   DAT.OID_PERI, 				   CASE WHEN ((SELECT COUNT(*)  				    FROM PED_SOLIC_CABEC SC	 					WHERE SC.PERD_OID_PERI = DAT.OID_PERI 						  AND SC.CLIE_OID_CLIE = DAT.CLIEN 				   )  < > 0) THEN 				   	   0 				   ELSE 				   	   1 				   END PERI_SIN_PED,			    				  pq_apl_rep.FN_072_RANGO(DAT.META) GRUPO 	 			FROM 			( 				SELECT SUBG.DES_SUBG_VENT SUBG, 					   CPG.OID_PARA_GRAL, 					   CPG.NUM_CONC, 					   MET.CLIE_OID_CLIE CLIEN, 					   CASE WHEN (CPG.BCAL_OID_BASE_CALC = 1) THEN 					   		MET.VAL_META*MONEDA.TIP_CAM 					   ELSE 					   	   	MET.VAL_META 					   END META, 					   PERI.OID_PERI, 					   MET.VAL_META/OP.VAL_FACT_CONV*OP.NUM_PUNT_ASIG PUN_META, 					   NVL(( 					   SELECT SUM(CCP.NUM_PUNT) 					   FROM INC_CUENT_CORRI_PUNTO CCP 					   WHERE CCP.CLIE_OID_CLIE = MET.CLIE_OID_CLIE 					   		 AND CCP.COPA_OID_PARA_GRAL = CPG.OID_PARA_GRAL 							 AND CCP.TMOV_OID_TIPO_MOVI  < > 2 					   ), 0) PUN_OBTE 				FROM INC_CONCU_PARAM_GENER CPG, 					 INC_DESCA DES, 					  INC_CAUSA_DESCA CD, 					 MAE_CLIEN_UNIDA_ADMIN CLI_UA, 					 ZON_SUB_GEREN_VENTA SUBG, 					 ZON_REGIO REG, 					 ZON_ZONA ZONA, 					 ZON_SECCI SEC, 					 ZON_TERRI_ADMIN TA, 					 MAE_CLIEN_TIPO_SUBTI CLI_SUB, 					 MAE_CLIEN_CLASI CLA, 					 INC_METAS_TIPO_VENTA MET, 					 INC_OBTEN_PUNTO OP, 					 INC_PLANT_CONCU PLA_CON, 		 			 ( 					 SELECT CASE WHEN (PAIS.MONE_OID_MONE =  1 ) THEN		 					 			 1 							ELSE 								 (SELECT TC.VAL_TIPO_CAMB 								 FROM SEG_TIPO_CAMBI TC 								 WHERE TC.MONE_OID_MON1 = PAIS.MONE_OID_MONE  								 	   AND TC.MONE_OID_MON2 =  1  									   AND TC.FEC_DESD  < = SYSDATE 									   AND TC.FEC_HAST >= SYSDATE 								 ) 							END TIP_CAM 					 FROM SEG_PAIS PAIS 					 WHERE PAIS.OID_PAIS =  1    					 ) MONEDA, 					 ( 					 SELECT P.FEC_INIC 					 FROM INC_CONCU_PARAM_GENER CPG, 					 	  CRA_PERIO P 					 WHERE CPG.OID_PARA_GRAL =  1   					 	   AND CPG.PERD_OID_PERI_DESD = P.OID_PERI 					 ) P_INI, 					 ( 					 SELECT P.FEC_FINA 					 FROM INC_CONCU_PARAM_GENER CPG, 					 	  CRA_PERIO P 					 WHERE CPG.OID_PARA_GRAL =   1  					 	   AND CPG.PERD_OID_PERI_DESD = P.OID_PERI 					 ) P_FIN,  					 CRA_PERIO PERI		 		  				WHERE CPG.OID_PARA_GRAL =   1  					  AND DES.COPA_OID_PARA_GRAL = CPG.OID_PARA_GRAL  					   				 	  AND DES.CADE_OID_CAUS_DESC = CD.OID_CAUS_DESC 					  AND CD.COD_CAUS  IN ('FA', 'FC')				       				       					  AND CLI_UA.CLIE_OID_CLIE = DES.CLIE_OID_CLIE 					  AND CLI_UA.IND_ACTI = 1 					  AND TA.OID_TERR_ADMI = CLI_UA.ZTAD_OID_TERR_ADMI 					  AND SUBG.OID_SUBG_VENT = REG.ZSGV_OID_SUBG_VENT 					  AND REG.OID_REGI = ZONA.ZORG_OID_REGI 					  AND ZONA.OID_ZONA = SEC.ZZON_OID_ZONA 					  AND SEC.OID_SECC = TA.ZSCC_OID_SECC 					  AND CLA.CTSU_OID_CLIE_TIPO_SUBT = CLI_SUB.SBTI_OID_SUBT_CLIE 				      AND CLI_SUB.CLIE_OID_CLIE = CLI_UA.CLIE_OID_CLIE 					  AND CLA.IND_PPAL = 1 					  AND MET.CLIE_OID_CLIE = CLI_UA.CLIE_OID_CLIE 					  AND MET.COPA_OID_PARA_GRAL = CPG.OID_PARA_GRAL 					  AND OP.COPA_OID_PARA_GRAL = CPG.OID_PARA_GRAL 					  AND PLA_CON.OID_PLAN_CONC = CPG.PLC2_OID_PLAN_CONC 					  AND PERI.FEC_INIC >= P_INI.FEC_INIC 					  AND PERI.FEC_FINA  < = P_FIN.FEC_FINA 					  AND PERI.PAIS_OID_PAIS = SUBG.PAIS_OID_PAIS 					  AND PERI.MARC_OID_MARC = SUBG.MARC_OID_MARC 					  AND PERI.CANA_OID_CANA = SUBG.CANA_OID_CANA 					  AND CLI_SUB.IND_PPAL = 1 					  AND SUBG.PAIS_OID_PAIS =  1   					  AND SUBG.MARC_OID_MARC =  1    					  AND SUBG.CANA_OID_CANA = 1    			 AND SUBG.OID_SUBG_VENT IN  ( 1 )  			      AND CLA.TCCL_OID_TIPO_CLASI IN  ( 1 )   			  	  AND CLA.CLAS_OID_CLAS IN ( 1 )   			  	AND CLI_SUB.TICL_OID_TIPO_CLIE IN  ( 1 )  		 			  	   AND CLI_SUB.SBTI_OID_SUBT_CLIE IN ( 1 )   					  AND CPG.BCAL_OID_BASE_CALC =  3   					  AND PLA_CON.TVEN_OID_TIPO_VENT =  1   			) DAT	   			WHERE PUN_OBTE >= PUN_META	   		GROUP BY DAT.SUBG, 				 DAT.CLIEN, 				 DAT.NUM_CONC, 				 DAT.OID_PERI,	 		pq_apl_rep.FN_072_RANGO(DAT.META) 		)	   		GROUP BY SUBG, 			   NUM_CONC, 			   GRUPO, 			   CLIEN 	)  	GROUP BY SUBG, 		   NUM_CONC, 		   GRUPO, 		   TOT_CON ) WHERE GRUPO IN ( 5000, 49000  ) 		 