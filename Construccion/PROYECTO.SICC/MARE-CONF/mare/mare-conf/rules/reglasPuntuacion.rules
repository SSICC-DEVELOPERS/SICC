<?xml version="1.0" encoding="ISO-8859-1"?>
<rule-set xmlns="http://drools.org/rules"
          xmlns:java="http://drools.org/semantics/java"
          xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
          name="ReglasPuntuacion"
          xs:schemaLocation="http://drools.org/rules rules.xsd 
          http://drools.org/semantics/java java.xsd">
    <java:import>es.indra.sicc.logicanegocio.ped.ConstantesPED</java:import>
    <java:import>es.indra.sicc.logicanegocio.inc.ConstantesINC</java:import>
    <java:import>java.math.BigDecimal</java:import>
    <java:import>es.indra.sicc.logicanegocio.inc.PosicionPuntaje</java:import>
    
    <!--
              REGLA 1: ProductosBonificadosBaseCalculoUnidades 
              @author Gustavo Viñales
              @date 11/04/2005
			  BELC300024301 - gPineda - 04/10/06 - Eliminada
     -->
	<!--
	<rule name="ProductosBonificadosBaseCalculoUnidades">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosBonificadosBaseCalculoUnidades")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            con.print("con.getIndProductosBonificados() " + con.getIndProductosBonificados())
        </java:condition>
	<java:condition> 
            con.getIndProductosBonificados()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
            con.print("con.validarProductoBonificado(pos) " + con.validarProductoBonificado(pos))
        </java:condition>
	<java:condition> 
            con.validarProductoBonificado(pos)
        </java:condition>
        <java:condition> 
            ConstantesINC.BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
        <java:consequence> 
            con.print("########   Consecuencia ProductosBonificadosBaseCalculoUnidades  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
	    con.print("########   Consecuencia ProductosBonificadosBaseCalculoUnidades pos.getUnidadesDemandaReal()" + pos.getUnidadesDemandaReal());    
	    con.print("########   Consecuencia ProductosBonificadosBaseCalculoUnidades con.calcularPuntosBonificados(pos)" + con.calcularPuntosBonificados(pos));    
            long val_1 = pos.getUnidadesDemandaReal().longValue();
            double val_2 = val_1 * con.calcularPuntosBonificados(pos).doubleValue();
            pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosBonificados(val_2);
	    pos.getPosicionPuntaje(con.getOidConcurso()).setFactorMultiplicadorImporteBonificado(new BigDecimal(con.getFactorMultiplicador(pos).doubleValue()));
        </java:consequence>
    </rule>
	-->

    <!--
              REGLA 1.5: ProductosBonificadosBaseCalculoMontoUnidades
              @author Julián Rivas
              @date 02/05/2006
			  BELC300024301 - gPineda - 04/10/06 - Renombrada
     -->
    <rule name="ProductosBonificadosBaseCalculoMontoUnidades">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosBonificadosBaseCalculoMontoUnidades")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            con.print("con.getIndProductosBonificados() " + con.getIndProductosBonificados())
        </java:condition>
	<java:condition> 
            con.getIndProductosBonificados()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
            con.print("con.validarProductoBonificado(pos) " + con.validarProductoBonificado(pos))
        </java:condition>
	<java:condition> 
            con.validarProductoBonificado(pos)
        </java:condition>
        <java:condition> 
            ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo()) || ConstantesINC.OID_BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
        <java:consequence> 
            con.print("########   Consecuencia ProductosBonificadosBaseCalculoMontoUnidades  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
		    con.print("########   Consecuencia ProductosBonificadosBaseCalculoMontoUnidades con.calcularPuntosBonificados(pos)" + con.calcularPuntosBonificados(pos));    
		    pos.getPosicionPuntaje(con.getOidConcurso()).setFactorMultiplicadorImporteBonificado(new BigDecimal(con.getFactorMultiplicador(pos).doubleValue()));
			pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosPorUnidad(con.getPuntosPorUnidad(pos));
        </java:consequence>
    </rule>
    
    <!--
              REGLA 2: ProductosExigidosBaseCalculoMonto      
              @author Gustavo Viñales
              @date 11/04/2005
     -->
    <rule name="ProductosExigidosBaseCalculoMonto">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosExigidosBaseCalculoMonto")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            con.getIndProductosExigidos()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
            con.validarProductoExigido(pos)
        </java:condition>
        <java:condition> 
            ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:consequence>
            con.print("########   Consecuencia ProductosExigidosBaseCalculoMonto  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
	    Long d = pos.getPosicionPuntaje(con.getOidConcurso()).getOidProductoExigido();
	    //jrivas 3/8/2005 INC 20358
	    //BigDecimal precio = pos.getPrecioCatalogTotalUniDemandaReal();
            BigDecimal precio = new BigDecimal((pos.getUnidadesDemandaReal()).doubleValue() * (pos.getPrecioCatalogoUnitarioLocal()).doubleValue());	    
            con.print("########   Consecuencia ProductosExigidosBaseCalculoMonto -- : pos.getPosicionPuntaje(con.getOidConcurso()).getOidProductoExigido() :" + d);   
            con.print("########   Consecuencia ProductosExigidosBaseCalculoMonto -- : pos.getPosicionPuntaje(con.getOidConcurso()).getOidPosicion() :" + pos.getPosicionPuntaje(con.getOidConcurso()).getOidPosicion());   
	    pos.getPosicionPuntaje(con.getOidConcurso()).setMontoSolicitud(precio);
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesSolicitud(pos.getUnidadesPorAtender() );
	    BigDecimal result = new BigDecimal(precio.doubleValue() /  con.getFactorConversion().doubleValue());
            result = result.multiply( new BigDecimal(con.getPuntosAsignar().doubleValue()));
	    pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosSolicitud(new Double(result.doubleValue()));
            pos.addProductoExigido(con.getOidConcurso());
        </java:consequence>
    </rule>
    
   <!--
               REGLA 4: ProductosExigidosBaseCalculoUnidades
               @author Sergio Platas
               @date 10/05/2005
    -->
    <rule name="ProductosExigidosBaseCalculoUnidades">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosExigidosBaseCalculoUnidades")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            con.getIndProductosExigidos()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
            con.validarProductoExigido(pos)
        </java:condition>
        <java:condition> 
            ConstantesINC.BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
        <java:consequence>
            con.print("########   Consecuencia ProductosExigidosBaseCalculoUnidades  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
	    //jrivas 3/8/2005 INC 20358
	    //pos.getPosicionPuntaje(con.getOidConcurso()).setMontoSolicitud(pos.getPrecioCatalogTotalUniDemandaReal());
            con.print("########   Consecuencia ProductosExigidosBaseCalculoUnidades -- : pos.getUnidadesDemandaReal() :" + pos.getUnidadesDemandaReal());   
            con.print("########   Consecuencia ProductosExigidosBaseCalculoUnidades -- : pos.getPrecioCatalogoUnitarioLocal() :" + pos.getPrecioCatalogoUnitarioLocal());   
	    BigDecimal precio = new BigDecimal((pos.getUnidadesDemandaReal()).doubleValue() * (pos.getPrecioCatalogoUnitarioLocal()).doubleValue());	    
            con.print("########   Consecuencia ProductosExigidosBaseCalculoUnidades -- : pos.getUnidadesPorAtender() :" + pos.getUnidadesPorAtender());   
            con.print("########   Consecuencia ProductosExigidosBaseCalculoUnidades -- : con.getFactorConversion() :" + con.getFactorConversion());   
            con.print("########   Consecuencia ProductosExigidosBaseCalculoUnidades -- : con.getPuntosAsignar() :" + con.getPuntosAsignar());   
	    pos.getPosicionPuntaje(con.getOidConcurso()).setMontoSolicitud(precio);
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesSolicitud(pos.getUnidadesPorAtender());
            BigDecimal unidades = new BigDecimal(pos.getUnidadesPorAtender().doubleValue());
            BigDecimal factConv = new BigDecimal(con.getFactorConversion().doubleValue());
            BigDecimal ptosAsig = new BigDecimal(con.getPuntosAsignar().doubleValue());
            BigDecimal puntos = new BigDecimal(unidades.doubleValue() / factConv.doubleValue()).multiply(ptosAsig);
            con.print("########   Consecuencia ProductosExigidosBaseCalculoUnidades -- : puntos :" + puntos);   
	    pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosSolicitud(new Double(puntos.doubleValue()));
            pos.addProductoExigido(con.getOidConcurso());
        </java:consequence>
    </rule>
    
  
    <!--
              REGLA 24: ProductosValidosBaseCalculoMontoFaltantesControlStockLiquidacion      
              @author Gustavo Viñales
              @date 11/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoFaltantesControlStockLiquidacion">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
        con.print("ProductosValidosBaseCalculoMontoFaltantesControlStockLiquidacion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition> 
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition> 
          pos.getControlStock()
        </java:condition>
            <java:condition> 
          pos.getControlLiquidacion()
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoFaltantesControlStockLiquidacion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal unidades = BigDecimal.valueOf(pos.getUnidadesComprometidas().longValue());
          BigDecimal monto = pos.getPrecioCatalogoUnitarioLocal().multiply(unidades);
          posicPunt.setMontoValido(monto);
          posicPunt.setUnidadesValidas(pos.getUnidadesComprometidas());
          long unidades2 = pos.getUnidadesComprometidas().longValue() - pos.getUnidadesPorAtender().longValue();
          BigDecimal fc = new BigDecimal(con.getFactorConversion().doubleValue());
          BigDecimal result = pos.getPrecioCatalogoUnitarioLocal().divide(fc,2,BigDecimal.ROUND_HALF_UP);
          result = result.multiply(BigDecimal.valueOf(unidades2));
          result = result.multiply(new BigDecimal(con.getPuntosAsignar().doubleValue()));
          posicPunt.setPuntajeFaltanteNoAnunciado(new Double(result.doubleValue()));
          BigDecimal puntos = posicPunt.getMontoValido().divide(new BigDecimal(con.getFactorConversion().doubleValue()),2,BigDecimal.ROUND_HALF_UP).multiply(new BigDecimal(con.getPuntosAsignar().doubleValue()));
          posicPunt.setPuntosValidos(new Double(puntos.doubleValue()));
        </java:consequence>
    </rule>
    
    <!--
              REGLA 25: ProductosValidosBaseCalculoUnidadesFaltantesControlLiquidacion
              @author Gustavo Viñales
              @date 12/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoUnidadesFaltantesControlLiquidacion">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
        con.print("ProductosValidosBaseCalculoUnidadesFaltantesControlLiquidacion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.OID_BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition>
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition>
          !pos.getControlStock()
        </java:condition>
            <java:condition>
          pos.getControlLiquidacion()
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoUnidadesFaltantesControlLiquidacion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal unidades = BigDecimal.valueOf(pos.getUnidadesComprometidas().longValue());
          BigDecimal monto = pos.getPrecioCatalogoUnitarioLocal().multiply(unidades);
          posicPunt.setMontoValido(monto);
          posicPunt.setUnidadesValidas(pos.getUnidadesComprometidas());
          double puntos = (posicPunt.getUnidadesValidas().longValue() / con.getFactorConversion().doubleValue());
          puntos = puntos * con.getPuntosAsignar().doubleValue();
          posicPunt.setPuntosValidos(new Double(puntos));
        </java:consequence>
    </rule>
    
    <!--
              REGLA 26: ProductosValidosBaseCalculoMonto
              @author Gustavo Viñales
              @date 12/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoMonto">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMonto")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
        <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
		<java:condition> 
          con.print("con.getIndProductosValidosCompletos() " + con.getIndProductosValidosCompletos())
        </java:condition>	
        <java:condition> 
          con.print("con.validarProductoValido(pos) " + con.validarProductoValido(pos))
        </java:condition>	
	<java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition> 
          con.print("con.getIndProductosExcluidos() " + con.getIndProductosExcluidos())
        </java:condition>	
        <java:condition> 
          con.print("con.validarProductoExcluido(pos) " + con.validarProductoExcluido(pos))
        </java:condition>	
	<java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
	<java:condition> 
          con.print("con.getBaseCalculo() " + con.getBaseCalculo())
        </java:condition>
	<java:condition> 
          ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
	<java:condition> 
          con.print("con.getTipoVenta() " + con.getTipoVenta())
        </java:condition>
	<java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
	<java:condition> 
          con.print("!con.getIndFaltantesAnunciados() " + con.getIndFaltantesAnunciados())
        </java:condition>
	<java:condition> 
          !con.getIndFaltantesAnunciados()
        </java:condition>
        <java:consequence>
          con.print("########   Consecuencia ProductosValidosBaseCalculoMonto  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
		  con.print("pos.getUnidadesComprometidas() " + pos.getUnidadesComprometidas());  
		  con.print("pos.getPrecioCatalogoUnitarioLocal() " + pos.getPrecioCatalogoUnitarioLocal());  
		  con.print("pos.getPosicionPuntaje(con.getOidConcurso()) " + pos.getPosicionPuntaje(con.getOidConcurso()));  
		  con.print("pos.getUnidadesComprometidas() " + pos.getUnidadesComprometidas());  
          con.print("con.getPuntosAsignar()  " + con.getPuntosAsignar());  
          con.print("con.getFactorConversion()  " + con.getFactorConversion());  
	  PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal uniDem = new BigDecimal(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal result = pos.getPrecioCatalogoUnitarioLocal().multiply(uniDem);
          posicPunt.setMontoValido(result);
          posicPunt.setUnidadesValidas(pos.getUnidadesComprometidas());
          BigDecimal fc = new BigDecimal(con.getFactorConversion().doubleValue());
          BigDecimal puntos =  new BigDecimal(posicPunt.getMontoValido().doubleValue() / fc.doubleValue());
          puntos = puntos.multiply(new BigDecimal(con.getPuntosAsignar().doubleValue()));
          posicPunt.setPuntosValidos(new Double(puntos.doubleValue()));
          con.print("puntos " + puntos);  
	   </java:consequence>
    </rule>

	
    <!--
              REGLA 27: ProductosValidosBaseCalculoMontoFaltantes
              @author Gustavo Viñales
              @date 11/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoFaltantes">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoFaltantes")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
        <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition> 
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition> 
          !pos.getControlStock()
        </java:condition>
            <java:condition> 
          !pos.getControlLiquidacion()
        </java:condition>
            <java:consequence>
            con.print("########   Consecuencia ProductosValidosBaseCalculoMontoFaltantes  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal uniDem = new BigDecimal(pos.getUnidadesDemandaReal().doubleValue());
          BigDecimal result = pos.getPrecioCatalogoUnitarioLocal().multiply(uniDem);
          posicPunt.setMontoValido(result);
          posicPunt.setUnidadesValidas(pos.getUnidadesDemandaReal());
          BigDecimal fc = new BigDecimal(con.getFactorConversion().doubleValue());
          BigDecimal puntos = posicPunt.getMontoValido().divide(fc,2,BigDecimal.ROUND_HALF_UP);
          puntos = puntos.multiply(new BigDecimal(con.getPuntosAsignar().doubleValue()));
          posicPunt.setPuntosValidos(new Double(puntos.doubleValue()));
       </java:consequence>
    </rule>
    
    <!--
              REGLA 28: ProductosValidosBaseCalculoUnidadesFaltantesControlStock
              @author Gustavo Viñales
              @date 13/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoUnidadesFaltantesControlStock">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoUnidadesFaltantesControlStock")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.OID_BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition>
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition>
          pos.getControlStock()
        </java:condition>
            <java:condition>
          !pos.getControlLiquidacion()
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoUnidadesFaltantesControlStock  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal unidades = BigDecimal.valueOf(pos.getUnidadesDemandaReal().longValue());
          BigDecimal monto = pos.getPrecioCatalogoUnitarioLocal().multiply(unidades);
          posicPunt.setMontoValido(monto);
          posicPunt.setUnidadesValidas(pos.getUnidadesDemandaReal());
          long unid = pos.getUnidadesComprometidas().longValue() - pos.getUnidadesPorAtender().longValue();
          double result = unid / con.getFactorConversion().doubleValue();
          result = result * con.getPuntosAsignar().doubleValue();
          posicPunt.setPuntajeFaltanteNoAnunciado(new Double(result));
          double puntos = (posicPunt.getUnidadesValidas().longValue() / con.getFactorConversion().doubleValue());
          puntos = puntos * con.getPuntosAsignar().doubleValue();
          posicPunt.setPuntosValidos(new Double(puntos));
       </java:consequence>
    </rule>
    
   <!--
              REGLA 29: ProductosValidosBaseCalculoMontoFaltantesControLiquidacion
              @author Gustavo Viñales
              @date 13/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoFaltantesControLiquidacion">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoFaltantesControLiquidacion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition>
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition>
          !pos.getControlStock()
        </java:condition>
            <java:condition>
          pos.getControlLiquidacion()
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoFaltantesControLiquidacion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal unidades = BigDecimal.valueOf(pos.getUnidadesComprometidas().longValue());
          BigDecimal monto = pos.getPrecioCatalogoUnitarioLocal().multiply(unidades);
          posicPunt.setMontoValido(monto);
          posicPunt.setUnidadesValidas(pos.getUnidadesComprometidas());
          BigDecimal puntos = (posicPunt.getMontoValido().divide( new BigDecimal(con.getFactorConversion().doubleValue()),2,BigDecimal.ROUND_HALF_UP ) ).multiply(new BigDecimal(con.getPuntosAsignar().doubleValue() ) );
          posicPunt.setPuntosValidos(new Double(puntos.doubleValue() ));
        </java:consequence>
    </rule>
    
    <!--
              REGLA 30: ProductosValidosBaseCalculoMontoFaltantesControStock
              @author Gustavo Viñales
              @date 12/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoFaltantesControStock">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoFaltantesControStock")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()    
        </java:condition>
            <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition>
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition>
          pos.getControlStock()
        </java:condition>
            <java:condition>
          !pos.getControlLiquidacion()
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoFaltantesControStock  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal unidades = BigDecimal.valueOf(pos.getUnidadesDemandaReal().longValue());
          BigDecimal monto = pos.getPrecioCatalogoUnitarioLocal().multiply(unidades);
          posicPunt.setMontoValido(monto);
          posicPunt.setUnidadesValidas(pos.getUnidadesDemandaReal());
          long unidades2 = pos.getUnidadesComprometidas().longValue() - pos.getUnidadesPorAtender().longValue();
          BigDecimal fc = new BigDecimal(con.getFactorConversion().doubleValue());
          BigDecimal result = pos.getPrecioCatalogoUnitarioLocal().divide(fc,2, BigDecimal.ROUND_HALF_UP);
          result = result.multiply(BigDecimal.valueOf(unidades2));
          result = result.multiply(new BigDecimal(con.getPuntosAsignar().doubleValue()));
          posicPunt.setPuntajeFaltanteNoAnunciado(new Double(result.doubleValue()));
          //(posicPunt.getMontoValido()/con.getFactorConversion())*con.getPuntosAsignar();
          BigDecimal puntos = posicPunt.getMontoValido().divide(new BigDecimal(con.getFactorConversion().doubleValue()),2,BigDecimal.ROUND_HALF_UP).multiply(new BigDecimal(con.getPuntosAsignar().doubleValue()));
          posicPunt.setPuntosValidos(new Double(puntos.doubleValue()));
        </java:consequence>
    </rule>
    
    <!--
              REGLA 31: ProductosValidosBaseCalculoUnidades
              @author Gustavo Viñales
              @date 12/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoUnidades">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoUnidades")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
        <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
          con.print("con.getIndProductosValidosCompletos() " + con.getIndProductosValidosCompletos())
        </java:condition>	
        <java:condition> 
          con.print("con.validarProductoValido(pos) " + con.validarProductoValido(pos))
        </java:condition>	
        <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition> 
          con.print("con.getIndProductosExcluidos() " + con.getIndProductosExcluidos())
        </java:condition>	
        <java:condition> 
          con.print("con.validarProductoExcluido(pos) " + con.validarProductoExcluido(pos))
        </java:condition>	
		<java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
		<java:condition> 
          con.print("con.getBaseCalculo() " + con.getBaseCalculo())
        </java:condition>
		<java:condition> 
          ConstantesINC.OID_BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition> 
          con.print("con.getTipoVenta() " + con.getTipoVenta())
        </java:condition>
		<java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
        <java:condition> 
          con.print("!con.getIndFaltantesAnunciados() " + con.getIndFaltantesAnunciados())
        </java:condition>
		<java:condition> 
          !con.getIndFaltantesAnunciados()
        </java:condition>
        <java:consequence>
          con.print("########   Consecuencia ProductosValidosBaseCalculoUnidades  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
		  con.print("pos.getUnidadesComprometidas() " + pos.getUnidadesComprometidas());  
		  con.print("pos.getPrecioCatalogoUnitarioLocal() " + pos.getPrecioCatalogoUnitarioLocal());  
		  con.print("pos.getPosicionPuntaje(con.getOidConcurso()) " + pos.getPosicionPuntaje(con.getOidConcurso()));  
          con.print("con.getPuntosAsignar()  " + con.getPuntosAsignar());  
          con.print("con.getFactorConversion()  " + con.getFactorConversion());  
		  PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal uni = new BigDecimal(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal result = pos.getPrecioCatalogoUnitarioLocal().multiply(uni);
          posicPunt.setMontoValido(result);
          posicPunt.setUnidadesValidas(pos.getUnidadesComprometidas());
          BigDecimal fc = new BigDecimal(con.getFactorConversion().doubleValue());
          double puntos = (posicPunt.getUnidadesValidas().longValue() / con.getFactorConversion().doubleValue());
          puntos = puntos * con.getPuntosAsignar().doubleValue();
          posicPunt.setPuntosValidos(new Double(puntos));
          con.print("puntos " + puntos);  
		</java:consequence>
    </rule>
    
    <!--
              REGLA 32: ProductosValidosBaseCalculoUnidadesFaltantes
              @author Gustavo Viñales
              @date 12/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoUnidadesFaltantes">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoUnidadesFaltantes")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.OID_BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition>
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition>
          !pos.getControlStock()
        </java:condition>
            <java:condition>
          !pos.getControlLiquidacion()
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoUnidadesFaltantes  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal unidades = BigDecimal.valueOf(pos.getUnidadesDemandaReal().longValue());
          BigDecimal monto = pos.getPrecioCatalogoUnitarioLocal().multiply(unidades);
          posicPunt.setMontoValido(monto);
          posicPunt.setUnidadesValidas(pos.getUnidadesDemandaReal());
          double puntos = (posicPunt.getUnidadesValidas().longValue() / con.getFactorConversion().doubleValue());
          puntos = puntos * con.getPuntosAsignar().doubleValue();
          posicPunt.setPuntosValidos(new Double(puntos));
        </java:consequence>
    </rule>
    
    <!--
              REGLA 33: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlStockLiquidacion
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlStockLiquidacion">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlStockLiquidacion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition>
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition>
          pos.getControlStock()
        </java:condition>
            <java:condition>
          pos.getControlLiquidacion()
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlStockLiquidacion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniComprom.multiply(pos.getPrecioNetoUnitarioLocal());
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
          double uComp = uniComprom.doubleValue();
          double uPorAten = pos.getUnidadesPorAtender().doubleValue();
          double preNetUnitLoc = pos.getPrecioNetoUnitarioLocal().doubleValue();
          double factConv = con.getFactorConversion().doubleValue();
          double ptosAsig = con.getPuntosAsignar().doubleValue();
          Double puntFaltNoAnunc = new Double( (uComp - uPorAten)*(preNetUnitLoc/factConv)*ptosAsig );
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntajeFaltanteNoAnunciado(puntFaltNoAnunc);
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);
       </java:consequence>
    </rule>
    
   <!--
              REGLA 34: ProductosValidosBaseCalculoMontoVentaNetaFaltantes
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaFaltantes">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaNetaFaltantes")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (con.getIndFaltantesAnunciados())
        </java:condition>
            <java:condition>
          (!pos.getLimiteVenta() || pos.getLimiteVenta())
        </java:condition>
            <java:condition>
          (!pos.getControlStock())
        </java:condition>
            <java:condition>
          (!pos.getControlLiquidacion())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaNetaFaltantes  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesDemandaReal().doubleValue());
          BigDecimal uniDemReal = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniDemReal.multiply(pos.getPrecioNetoUnitarioLocal());
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandaReal());
          double factConv = con.getFactorConversion().doubleValue();
          double ptosAsig = con.getPuntosAsignar().doubleValue();
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);
        </java:consequence>
    </rule>
    
    <!--
              REGLA 35: ProductosValidosBaseCalculoMontoVentaNeta
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNeta">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaNeta")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (!con.getIndFaltantesAnunciados())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaNeta  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniComprom.multiply(pos.getPrecioNetoUnitarioLocal());     
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
          double factConv = con.getFactorConversion().doubleValue();
          double ptosAsig = con.getPuntosAsignar().doubleValue();
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);
        </java:consequence>
    </rule>
    
    <!--
              REGLA 36: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControStock
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaFaltantesControStock">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaNetaFaltantesControStock")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (con.getIndFaltantesAnunciados())
        </java:condition>
            <java:condition>
          (!pos.getLimiteVenta() || pos.getLimiteVenta())
        </java:condition>
            <java:condition>
          (pos.getControlStock())
        </java:condition>
            <java:condition>
          (!pos.getControlLiquidacion())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaNetaFaltantesControStock  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesDemandaReal().doubleValue());
          BigDecimal uniDemReal = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniDemReal.multiply(pos.getPrecioNetoUnitarioLocal());
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandaReal());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          double uComp = uniComprom.doubleValue();
          double uPorAten = pos.getUnidadesPorAtender().doubleValue();
          double preNetUnitLoc = pos.getPrecioNetoUnitarioLocal().doubleValue();
          double factConv = con.getFactorConversion().doubleValue();
          double ptosAsig = con.getPuntosAsignar().doubleValue();
          Double puntFaltNoAnunc = new Double( (uComp - uPorAten)*(preNetUnitLoc/factConv)*ptosAsig );
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntajeFaltanteNoAnunciado(puntFaltNoAnunc);
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);
        </java:consequence>
    </rule>
    
    <!--
              REGLA 37: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControLiquidacion
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaFaltantesControLiquidacion">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaNetaFaltantesControLiquidacion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (con.getIndFaltantesAnunciados())
        </java:condition>
            <java:condition>
          (!pos.getLimiteVenta() || pos.getLimiteVenta())
        </java:condition>
            <java:condition>
          (!pos.getControlStock())
        </java:condition>
            <java:condition>
          (pos.getControlLiquidacion())
        </java:condition>
        <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaNetaFaltantesControLiquidacion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniComprom.multiply(pos.getPrecioNetoUnitarioLocal());
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
          double factConv = con.getFactorConversion().doubleValue();
          double ptosAsig = con.getPuntosAsignar().doubleValue();
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);
        </java:consequence>
    </rule>
    
   <!--
              REGLA 38: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlStockLiquidacion
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlStockLiquidacion">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlStockLiquidacion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (con.getIndFaltantesAnunciados())
        </java:condition>
            <java:condition>
          (!pos.getLimiteVenta() || pos.getLimiteVenta())
        </java:condition>
            <java:condition>
          (pos.getControlStock())
        </java:condition>
            <java:condition>
          (pos.getControlLiquidacion())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlStockLiquidacion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniComprom.multiply(pos.getPrecioFacturaUnitarioLocal());
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
          double uComp = uniComprom.doubleValue();
          double uPorAten = pos.getUnidadesPorAtender().doubleValue();
          double preFactUnitLoc = pos.getPrecioFacturaUnitarioLocal().doubleValue();
          double factConv = con.getFactorConversion().doubleValue();
          double ptosAsig = con.getPuntosAsignar().doubleValue();
          Double puntFaltNoAnunc = new Double( (uComp - uPorAten)*(preFactUnitLoc/factConv)*ptosAsig );
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntajeFaltanteNoAnunciado(puntFaltNoAnunc);
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);
        </java:consequence>
    </rule>
    
    <!--
              REGLA 39: ProductosValidosBaseCalculoMontoVentaFacturaFaltantes
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaFaltantes">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaFacturaFaltantes")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()  
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (con.getIndFaltantesAnunciados())
        </java:condition>
            <java:condition>
          (!pos.getLimiteVenta() || pos.getLimiteVenta())
        </java:condition>
            <java:condition>
          (!pos.getControlStock())
        </java:condition>
            <java:condition>
          (!pos.getControlLiquidacion())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaFacturaFaltantes  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesDemandaReal().doubleValue());
          BigDecimal uniDemanReal = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniDemanReal.multiply(pos.getPrecioFacturaUnitarioLocal());
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandaReal());
          double factConv = con.getFactorConversion().doubleValue();
          Double ptosAsig = new Double(con.getPuntosAsignar().doubleValue());
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig.doubleValue());
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);
        </java:consequence>
    </rule>
    
    <!--
              REGLA 40: ProductosValidosBaseCalculoMontoVentaFactura
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaFactura">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaFactura")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
            (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition>
            (ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (!con.getIndFaltantesAnunciados())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaFactura  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniComprom.multiply(pos.getPrecioFacturaUnitarioLocal());
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
          double factConv = con.getFactorConversion().doubleValue();
          Double ptosAsig = new Double(con.getPuntosAsignar().doubleValue());
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig.doubleValue());
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);
        </java:consequence>
    </rule>
    
    <!--
              REGLA 41: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControStock
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControStock">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControStock")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (con.getIndFaltantesAnunciados())
        </java:condition>
            <java:condition>
          (!pos.getLimiteVenta() || pos.getLimiteVenta())
        </java:condition>
            <java:condition>
          (pos.getControlStock())
        </java:condition>
            <java:condition>
          (!pos.getControlLiquidacion())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControStock  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesDemandaReal().doubleValue());
          BigDecimal uniDemReal = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniDemReal.multiply(pos.getPrecioFacturaUnitarioLocal()); 
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandaReal());
          double uniComprom = pos.getUnidadesComprometidas().doubleValue();
          double uniPorAtend = pos.getUnidadesPorAtender().doubleValue();
          double preFactUnitLoc = pos.getPrecioFacturaUnitarioLocal().doubleValue();
          double factConv = con.getFactorConversion().doubleValue();
          double ptosAsig = con.getPuntosAsignar().doubleValue();
          Double puntajeFaltNoAnunciado = new Double((uniComprom - uniPorAtend) * (preFactUnitLoc / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntajeFaltanteNoAnunciado(puntajeFaltNoAnunciado);
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos);   
        </java:consequence>
    </rule>
    
    <!--
              REGLA 42: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControLiquidacion
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControLiquidacion">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControLiquidacion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (con.getIndFaltantesAnunciados())
        </java:condition>
            <java:condition>
          (!pos.getLimiteVenta() || pos.getLimiteVenta())
        </java:condition>
            <java:condition>
          (!pos.getControlStock())
        </java:condition>
            <java:condition>
          (pos.getControlLiquidacion())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControLiquidacion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          Double unidades = new Double(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniComprom.multiply(pos.getPrecioFacturaUnitarioLocal()); 
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
          double ptosAsig = con.getPuntosAsignar().doubleValue();
          double factConv = con.getFactorConversion().doubleValue();
          Double puntosValidos = new Double((montoValido.doubleValue() / factConv ) * ptosAsig);
          pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(puntosValidos); 
        </java:consequence>
    </rule>


	<!-- 
        ================================================================================
                                REGLAS:  "RANKING"
        ================================================================================
     -->
    <!--
              REGLA 43: ProductosValidosBaseCalculoMontoFaltantesControlLiquidacionRanking
              @author Sergio Platas
              @date 14/07/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoFaltantesControlLiquidacionRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoFaltantesControlLiquidacionRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print(
            "###### CONSEC.: ProductosValidosBaseCalculoMontoFaltantesControlLiquidacionRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesComprometidas().doubleValue() * pos.getPrecioCatalogoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
        </java:consequence>
    </rule>

	<!--
              REGLA 44: ProductosValidosBaseCalculoMontoFaltantesControlStockRanking
              @author Sergio Platas
              @date 14/07/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoFaltantesControlStockRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
		<java:condition>
            con.print("ProductosValidosBaseCalculoMontoFaltantesControlStockRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())  
        </java:condition>
        <java:condition>
            con.getIndRanking() 
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print(
            "###### CONSEC.: ProductosValidosBaseCalculoMontoFaltantesControlStockRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesDemandadas().doubleValue() * pos.getPrecioCatalogoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas((pos.getUnidadesDemandadas()));
        </java:consequence>
    </rule>

	<!--
              REGLA 45: ProductosValidosBaseCalculoMontoFaltantesRanking
              @author Sergio Platas
              @date 15/07/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoFaltantesRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoFaltantesRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso()) 
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos)) 
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))        
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            (!pos.getLimiteVenta() || pos.getLimiteVenta())            
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()            
        </java:condition>
        <java:consequence>
            con.print(
            "###### CONSEC.: ProductosValidosBaseCalculoMontoFaltantesRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesPorAtender().doubleValue() * pos.getPrecioCatalogoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesPorAtender());
        </java:consequence>
    </rule>

	<!--
              REGLA 46: ProductosValidosBaseCalculoMontoVentaNetaFaltantesRanking 
              @author Sergio Platas
              @date 15/07/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaFaltantesRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoVentaNetaFaltantesRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print(
            "###### CONSEC.: ProductosValidosBaseCalculoMontoVentaNetaFaltantesRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesPorAtender().doubleValue() * pos.getPrecioNetoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesPorAtender());
        </java:consequence>
    </rule>


	<!--
              REGLA 47: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlLimiteVentaRanking 
              @author Sergio Platas
              @date 15/07/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlLimiteVentaRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlLimiteVentaRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlLimiteVentaRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesDemandadas().doubleValue() * pos.getPrecioNetoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandadas());
        </java:consequence>
    </rule>

	<!--
              REGLA 48: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlLiquidacionRanking 
              @author Sergio Platas
              @date 15/07/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlLiquidacionRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlLiquidacionRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlLiquidacionRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesComprometidas().doubleValue() * pos.getPrecioNetoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
        </java:consequence>
    </rule>

	<!--                
              REGLA 49: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlStockRanking 
              @author Sergio Platas
              @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlStockRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlStockRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
	<java:condition> 
          con.print("pos.getLimiteVenta() " + pos.getLimiteVenta())
        </java:condition>	
	 <java:condition> 
          con.print("pos.getControlStock() " + pos.getControlStock())
        </java:condition>
	 <java:condition> 
          con.print("pos.getControlLiquidacion() " + pos.getLimiteVenta())
        </java:condition>
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoMontoVentaNetaFaltantesControlStockRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesDemandadas().doubleValue() * pos.getPrecioNetoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandadas());
        </java:consequence>
    </rule>

	<!--                
              REGLA 50: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesRanking 
              @author Sergio Platas
              @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaFaltantesRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoVentaFacturaFaltantesRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesPorAtender().doubleValue() * pos.getPrecioFacturaUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesPorAtender());
        </java:consequence>
    </rule>

	<!--                
          REGLA 51: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlLimiteVentaRanking 
          @author Sergio Platas
          @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlLimiteVentaRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlLimiteVentaRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            pos.getLimiteVenta()
        </java:condition>       
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlLimiteVentaRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesDemandadas().doubleValue() * pos.getPrecioFacturaUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandadas());    
        </java:consequence>
    </rule>

	<!--                
          REGLA 52: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlStockRanking 
          @author Sergio Platas
          @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlStockRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlStockRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>       
        <java:condition>
            pos.getControlStock()
        </java:condition>      
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlStockRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesDemandadas().doubleValue() * pos.getPrecioFacturaUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandadas());
        </java:consequence>
    </rule>

	<!--                
          REGLA 53:  ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlLiquidacionRanking   
          @author Sergio Platas
          @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlLiquidacionRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlLiquidacionRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition>
            ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta())
        </java:condition>
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>        
        <java:condition>
            pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoMontoVentaFacturaFaltantesControlLiquidacionRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesComprometidas().doubleValue() * pos.getPrecioFacturaUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
        </java:consequence>
    </rule>

	<!--                
          REGLA 54:  ProductosValidosBaseCalculoUnidadesFaltantesRanking   
          @author Sergio Platas
          @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoUnidadesFaltantesRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoUnidadesFaltantesRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>        
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>         
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoUnidadesFaltantesRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesComprometidas().doubleValue() * pos.getPrecioCatalogoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
        </java:consequence>
    </rule>

	<!--                
          REGLA 55:  ProductosValidosBaseCalculoUnidadesFaltantesControlLimiteVentaRanking   
          @author Sergio Platas
          @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoUnidadesFaltantesControlLimiteVentaRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoUnidadesFaltantesControlLimiteVentaRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>       
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoUnidadesFaltantesControlLimiteVentaRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesPorAtender().doubleValue() * 
            pos.getPrecioCatalogoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesPorAtender());
        </java:consequence>
    </rule>

	<!--                
          REGLA 56:  ProductosValidosBaseCalculoUnidadesFaltantesControlStockRanking   
          @author Sergio Platas
          @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoUnidadesFaltantesControlStockRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoUnidadesFaltantesControlStockRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>       
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            pos.getControlStock()
        </java:condition>
        <java:condition>
            !pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoUnidadesFaltantesControlStockRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesDemandadas().doubleValue() * pos.getPrecioCatalogoUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandadas());
        </java:consequence>
    </rule>

	<!--                
          REGLA 57:  ProductosValidosBaseCalculoUnidadesFaltantesControlLiquidacionRanking   
          @author Sergio Platas
          @date 15/07/2005
     -->        
    <rule name="ProductosValidosBaseCalculoUnidadesFaltantesControlLiquidacionRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
            con.print("ProductosValidosBaseCalculoUnidadesFaltantesControlLiquidacionRanking")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            con.getIndRanking()
        </java:condition>
        <java:condition>
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition>
            (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition>
            (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
        <java:condition>
            ConstantesINC.BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>        
        <java:condition>
            con.getIndFaltantesAnunciados()
        </java:condition>
        <java:condition>
            !pos.getLimiteVenta()
        </java:condition>
        <java:condition>
            !pos.getControlStock()
        </java:condition>
        <java:condition>
            pos.getControlLiquidacion()
        </java:condition>
        <java:consequence>
            con.print("###### CONSEC.: ProductosValidosBaseCalculoUnidadesFaltantesControlLiquidacionRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(new BigDecimal(pos.getUnidadesComprometidas().doubleValue() * pos.getPrecioFacturaUnitarioLocal().doubleValue()));
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());
        </java:consequence>
    </rule>

    <!--
              REGLA 58: ProductosExigidosBaseCalculoNumeroPedidos      
              @author Julián Rivas
              @date 09/08/2005
     -->
    <rule name="ProductosExigidosBaseCalculoNumeroPedidos">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosExigidosBaseCalculoNumeroPedidos")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            con.getIndProductosExigidos()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
            con.validarProductoExigido(pos)
        </java:condition>
        <java:condition> 
            ConstantesINC.BASE_CALCULO_NUM_PEDIDOS.equals(con.getBaseCalculo())
        </java:condition>
        <java:consequence>
            con.print("########   Consecuencia ProductosExigidosBaseCalculoNumeroPedidos  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            BigDecimal precio = new BigDecimal((pos.getUnidadesPorAtender()).doubleValue() * (pos.getPrecioCatalogoUnitarioLocal()).doubleValue());	    
   	    con.print("########   Consecuencia ProductosExigidosBaseCalculoNumeroPedidos pos.getUnidadesPorAtender(): " + pos.getUnidadesPorAtender());   
	    con.print("########   Consecuencia ProductosExigidosBaseCalculoNumeroPedidos pos.getPrecioCatalogoUnitarioLocal(): " + pos.getPrecioCatalogoUnitarioLocal());   
	    con.print("########   Consecuencia ProductosExigidosBaseCalculoNumeroPedidos precio: " + precio);   
	    pos.getPosicionPuntaje(con.getOidConcurso()).setMontoSolicitud(precio);
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesSolicitud(pos.getUnidadesPorAtender() );
            pos.addProductoExigido(con.getOidConcurso());
        </java:consequence>
    </rule>

    <!--
              REGLA 59: ProductosValidosBaseCalculoNumeroPedidos      
              @author Julián Rivas
              @date 09/08/2005
     -->
    <rule name="ProductosValidosBaseCalculoNumeroPedidos">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition>
          con.print("ProductosValidosBaseCalculoNumeroPedidos")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
        <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
	<java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
	<java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
	<java:condition> 
          ConstantesINC.BASE_CALCULO_NUM_PEDIDOS.equals(con.getBaseCalculo())
        </java:condition>
        <java:consequence>
          con.print("########   Consecuencia ProductosValidosBaseCalculoNumeroPedidos  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            BigDecimal precio = new BigDecimal((pos.getUnidadesPorAtender()).doubleValue() * (pos.getPrecioCatalogoUnitarioLocal()).doubleValue());	    
   	    con.print("########   Consecuencia ProductosValidosBaseCalculoNumeroPedidos pos.getUnidadesPorAtender(): " + pos.getUnidadesPorAtender());   
	    con.print("########   Consecuencia ProductosValidosBaseCalculoNumeroPedidos pos.getPrecioCatalogoUnitarioLocal(): " + pos.getPrecioCatalogoUnitarioLocal());   
	    con.print("########   Consecuencia ProductosValidosBaseCalculoNumeroPedidos precio: " + precio);   
	    pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(precio);
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesPorAtender() );            
       </java:consequence>
    </rule>

    <!--
              REGLA 60: ProductosValidosBaseCalculoRecomendada
              @author Gustavo Viñales
              @date 12/04/2005
     -->
    <rule name="ProductosValidosBaseCalculoRecomendada">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoRecomendada")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking() 
        </java:condition>
        <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
	<java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
	<java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
	<java:condition> 
          ConstantesINC.OID_BASE_CALCULO_RECOMENDADAS.equals(con.getBaseCalculo())
        </java:condition>
        <java:consequence>
          con.print("########   Consecuencia ProductosValidosBaseCalculoRecomendada  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
          con.print("pos.getUnidadesPorAtender() " + pos.getUnidadesPorAtender());  
	  con.print("pos.getPrecioCatalogoUnitarioLocal() " + pos.getPrecioCatalogoUnitarioLocal());  
          //BigDecimal monto = new BigDecimal((pos.getUnidadesPorAtender()).doubleValue() * (pos.getPrecioContableUnitarioLocal()).doubleValue());	    
	  BigDecimal monto = new BigDecimal((pos.getUnidadesPorAtender()).doubleValue() * (pos.getPrecioCatalogoUnitarioLocal()).doubleValue());	    
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(monto);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesPorAtender());

	   </java:consequence>
    </rule>

    <!--
              REGLA 61: ProductosExigidosBaseCalculoRecomendada
              @author Gustavo Viñales
              @date 11/04/2005
     -->
    <rule name="ProductosExigidosBaseCalculoRecomendada">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosExigidosBaseCalculoRecomendada")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            con.getIndProductosExigidos()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
            con.validarProductoExigido(pos)
        </java:condition>
        <java:condition> 
            ConstantesINC.OID_BASE_CALCULO_RECOMENDADAS.equals(con.getBaseCalculo())
        </java:condition>
        <java:consequence>
            con.print("########   Consecuencia ProductosExigidosBaseCalculoRecomendada  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
            con.print("pos.getUnidadesDemandaReal() " + pos.getUnidadesDemandaReal());  
            con.print("pos.getPrecioCatalogoUnitarioLocal() " + pos.getPrecioCatalogoUnitarioLocal());  
            con.print("pos.getUnidadesPorAtender() " + pos.getUnidadesPorAtender());  
            BigDecimal monto = new BigDecimal((pos.getUnidadesDemandaReal()).doubleValue() * (pos.getPrecioCatalogoUnitarioLocal()).doubleValue());	    
            pos.getPosicionPuntaje(con.getOidConcurso()).setMontoSolicitud(monto);
            pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesSolicitud(pos.getUnidadesPorAtender() );
            pos.addProductoExigido(con.getOidConcurso());
        </java:consequence>
    </rule>

    <!--
              REGLA 62: ProductosValidosBaseCalculoMontoRanking
              @author Viviana bongiovanni
              @date 20/08/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMonto")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          con.getIndRanking()
        </java:condition>
        <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
		<java:condition> 
          con.print("con.getIndProductosValidosCompletos() " + con.getIndProductosValidosCompletos())
        </java:condition>	
        <java:condition> 
          con.print("con.validarProductoValido(pos) " + con.validarProductoValido(pos))
        </java:condition>	
	<java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition> 
          con.print("con.getIndProductosExcluidos() " + con.getIndProductosExcluidos())
        </java:condition>	
        <java:condition> 
          con.print("con.validarProductoExcluido(pos) " + con.validarProductoExcluido(pos))
        </java:condition>	
	<java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
	<java:condition> 
          con.print("con.getBaseCalculo() " + con.getBaseCalculo())
        </java:condition>
	<java:condition> 
          ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
	<java:condition> 
          con.print("con.getTipoVenta() " + con.getTipoVenta())
        </java:condition>
	<java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
	<java:condition> 
          con.print("!con.getIndFaltantesAnunciados() " + con.getIndFaltantesAnunciados())
        </java:condition>
	<java:condition> 
          !con.getIndFaltantesAnunciados()
        </java:condition>
        <java:consequence>
          con.print("########   Consecuencia ProductosValidosBaseCalculoMontoRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
		  con.print("pos.getUnidadesComprometidas() " + pos.getUnidadesComprometidas());  
		  con.print("pos.getPrecioCatalogoUnitarioLocal() " + pos.getPrecioCatalogoUnitarioLocal());  
		  con.print("pos.getPosicionPuntaje(con.getOidConcurso()) " + pos.getPosicionPuntaje(con.getOidConcurso()));  
		  con.print("pos.getUnidadesComprometidas() " + pos.getUnidadesComprometidas());  
		  PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal uniDem = new BigDecimal(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal result = pos.getPrecioCatalogoUnitarioLocal().multiply(uniDem);
          posicPunt.setMontoValido(result);
          posicPunt.setUnidadesValidas(pos.getUnidadesComprometidas());
	</java:consequence>
    </rule>

    <!--
              REGLA 63: ProductosValidosBaseCalculoUnidadesRanking
              @author Viviana Bongiovanni
              @date 20/08/2005
     -->
    <rule name="ProductosValidosBaseCalculoUnidadesRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoUnidades")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          con.getIndRanking()
        </java:condition>
        <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
          con.print("con.getIndProductosValidosCompletos() " + con.getIndProductosValidosCompletos())
        </java:condition>	
        <java:condition> 
          con.print("con.validarProductoValido(pos) " + con.validarProductoValido(pos))
        </java:condition>	
        <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
        <java:condition> 
          con.print("con.getIndProductosExcluidos() " + con.getIndProductosExcluidos())
        </java:condition>	
        <java:condition> 
          con.print("con.validarProductoExcluido(pos) " + con.validarProductoExcluido(pos))
        </java:condition>	
		<java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
		<java:condition> 
          con.print("con.getBaseCalculo() " + con.getBaseCalculo())
        </java:condition>
		<java:condition> 
          ConstantesINC.OID_BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition> 
          con.print("!con.getIndFaltantesAnunciados() " + con.getIndFaltantesAnunciados())
        </java:condition>
		<java:condition> 
          !con.getIndFaltantesAnunciados()
        </java:condition>
        <java:consequence>
          con.print("########   Consecuencia ProductosValidosBaseCalculoUnidadesRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
		  con.print("pos.getUnidadesComprometidas() " + pos.getUnidadesComprometidas());  
		  con.print("pos.getPrecioCatalogoUnitarioLocal() " + pos.getPrecioCatalogoUnitarioLocal());  
		  con.print("pos.getPosicionPuntaje(con.getOidConcurso()) " + pos.getPosicionPuntaje(con.getOidConcurso()));  
		  PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
          BigDecimal uni = new BigDecimal(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal result = pos.getPrecioCatalogoUnitarioLocal().multiply(uni);
          posicPunt.setMontoValido(result);
          posicPunt.setUnidadesValidas(pos.getUnidadesComprometidas());
	</java:consequence>
    </rule>

    <!--
              REGLA 64: ProductosValidosBaseCalculoMontoVentaNetaRanking
              @author Sergio Platas
              @date 16/05/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaNetaRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaNeta")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
	<java:condition> 
          con.print("con.getIndProductosValidosCompletos() " + con.getIndProductosValidosCompletos())
        </java:condition>
	<java:condition> 
          con.print("con.validarProductoValido(pos) " + con.validarProductoValido(pos))
        </java:condition>
	<java:condition> 
          con.print("!con.getIndProductosExcluidos() " + con.getIndProductosExcluidos())
        </java:condition>
	<java:condition> 
          con.print("!con.validarProductoExcluido(pos) " + con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition> 
          (ConstantesINC.TIPO_VENTA_NETA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (!con.getIndFaltantesAnunciados())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaNetaRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
	  con.print("pos.getOidPosicion(): " + pos.getOidPosicion());  
	  con.print("pos.getUnidadesComprometidas(): " + pos.getUnidadesComprometidas());  
	  con.print("pos.getPrecioNetoUnitarioLocal(): " + pos.getPrecioNetoUnitarioLocal());  
          Double unidades = new Double(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniComprom.multiply(pos.getPrecioNetoUnitarioLocal());    
	  con.print("montoValido: " + montoValido);  
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());          
        </java:consequence>
    </rule>

    <!--
              REGLA 40: ProductosValidosBaseCalculoMontoVentaFacturaRanking
              @author Viviana Bongiovanni
              @date 20/08/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoVentaFacturaRanking">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
          con.print("ProductosValidosBaseCalculoMontoVentaFactura")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          (!pos.getSolicitudRechazado(con.getOidConcurso()))
        </java:condition>
        <java:condition>
          con.getIndRanking()
        </java:condition>
            <java:condition> 
          (!ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()))
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
	<java:condition> 
          con.print("con.getIndProductosValidosCompletos(): " + con.getIndProductosValidosCompletos())
        </java:condition>
	<java:condition> 
          con.print("con.validarProductoValido(pos): " + con.validarProductoValido(pos))
        </java:condition>
	<java:condition> 
          con.print("!con.getIndProductosExcluidos(): " + con.getIndProductosExcluidos())
        </java:condition>
	<java:condition> 
          con.print("!con.validarProductoExcluido(pos): " + con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
            (ConstantesINC.BASE_CALCULO_MONTO.equals(con.getBaseCalculo()))
        </java:condition>
            <java:condition>
            (ConstantesINC.TIPO_VENTA_FACTURA.equals(con.getTipoVenta()))
        </java:condition>
            <java:condition> 
          (!con.getIndFaltantesAnunciados())
        </java:condition>
            <java:consequence>
 	  con.print("########   Consecuencia ProductosValidosBaseCalculoMontoVentaFacturaRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
	  con.print("pos.getOidPosicion(): " + pos.getOidPosicion());  
	  con.print("pos.getUnidadesComprometidas(): " + pos.getUnidadesComprometidas());  
	  con.print("pos.getPrecioFacturaUnitarioLocal(): " + pos.getPrecioFacturaUnitarioLocal());  
          Double unidades = new Double(pos.getUnidadesComprometidas().doubleValue());
          BigDecimal uniComprom = new BigDecimal(unidades.doubleValue());
          BigDecimal montoValido = uniComprom.multiply(pos.getPrecioFacturaUnitarioLocal());
          pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(montoValido);
          pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesComprometidas());          
        </java:consequence>
    </rule>
   

    <!--
              REGLA 65: ProductosExigidosRechazo
              @author Julián Rivas
              @date 30/08/2005
	      Eliminada INC 22312
     -->
    <!--rule name="ProductosExigidosRechazo" salience="100">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosExigidosRechazo")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            con.getIndProductosExigidos()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
            !con.validarProductoExigido(pos)
        </java:condition>
        <java:consequence>
            con.print("########   Consecuencia ProductosExigidosRechazo  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
	    pos.setRechazada(con.getOidConcurso());
	    drools.modifyObject(pos);
        </java:consequence>
    </rule-->


    <!--
              REGLA 66: ProductosValidosBaseCalculoMontoSinExigencias
              @author Julián Rivas
              @date 31/08/2005
     -->
    <rule name="ProductosValidosBaseCalculoMontoSinExigencias" salience="50">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosValidosBaseCalculoMontoSinExigencias")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
          con.getIndProductosValidosCompletos()
        </java:condition>
	<java:condition> 
            !con.getIndProductosBonificados()
        </java:condition>
        <java:condition> 
            !con.getIndProductosExigidos()
        </java:condition>
        <java:condition> 
            !con.getIndProductosExcluidos()
        </java:condition>
        <java:condition> 
            ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition> 
            ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
        <java:condition> 
            !con.getIndFaltantesAnunciados()
        </java:condition>
        <java:consequence>
            con.print("########   Consecuencia ProductosValidosBaseCalculoMontoSinExigencias  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
	    BigDecimal precio = new BigDecimal((pos.getUnidadesDemandaReal()).doubleValue() * (pos.getPrecioCatalogoUnitarioLocal()).doubleValue());	    
	    pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(precio);
	    pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandaReal() );
	    BigDecimal result = new BigDecimal(precio.doubleValue() /  con.getFactorConversion().doubleValue());
	    result = result.multiply( new BigDecimal(con.getPuntosAsignar().doubleValue()));
	    pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(new Double(result.doubleValue()));
	    pos.setRechazada(con.getOidConcurso());
	    drools.modifyObject(pos);
	</java:consequence>
    </rule>


    <!--
              REGLA 67: ProductosValidosBaseCalculoUnidadesSinExigencias
              @author Julián Rivas
              @date 31/08/2005
     -->
    <rule name="ProductosValidosBaseCalculoUnidadesSinExigencias" salience="50">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosValidosBaseCalculoUnidadesSinExigencias")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
            !con.getIndRanking()
        </java:condition>
        <java:condition> 
            !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
        <java:condition> 
          con.getIndProductosValidosCompletos()
        </java:condition>
	<java:condition> 
            !con.getIndProductosBonificados()
        </java:condition>
        <java:condition> 
            !con.getIndProductosExigidos()
        </java:condition>
        <java:condition> 
            !con.getIndProductosExcluidos()
        </java:condition>
        <java:condition> 
            ConstantesINC.BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
        <java:condition> 
            !con.getIndFaltantesAnunciados()
        </java:condition>
        <java:consequence>
            con.print("########   Consecuencia ProductosValidosBaseCalculoUnidadesSinExigencias  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
	    BigDecimal precio = new BigDecimal((pos.getUnidadesDemandaReal()).doubleValue() * (pos.getPrecioCatalogoUnitarioLocal()).doubleValue());	    
	    pos.getPosicionPuntaje(con.getOidConcurso()).setMontoValido(precio);
	    pos.getPosicionPuntaje(con.getOidConcurso()).setUnidadesValidas(pos.getUnidadesDemandaReal() );
	    BigDecimal result = new BigDecimal(pos.getUnidadesDemandaReal().longValue() /  con.getFactorConversion().doubleValue());
	    result = result.multiply( new BigDecimal(con.getPuntosAsignar().doubleValue()));
	    pos.getPosicionPuntaje(con.getOidConcurso()).setPuntosValidos(new Double(result.doubleValue()));
	    pos.setRechazada(con.getOidConcurso());
	    drools.modifyObject(pos);
	</java:consequence>
    </rule>

    <!--
              REGLA 68: ProductosValidosBaseCalculoUnidadesFaltantesControlStockLiquidacion      
              @author Julián Rivas DBLG500001002
              @date 17/07/2006 
     -->
    <rule name="ProductosValidosBaseCalculoUnidadesFaltantesControlStockLiquidacion">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
        con.print("ProductosValidosBaseCalculoUnidadesFaltantesControlStockLiquidacion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
          !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
        <java:condition>
          !con.getIndRanking()
        </java:condition>
            <java:condition> 
          !ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado())
        </java:condition>
            <java:condition> 
          (con.getIndProductosValidosCompletos() || con.validarProductoValido(pos))
        </java:condition>
            <java:condition> 
          (!con.getIndProductosExcluidos() || !con.validarProductoExcluido(pos))
        </java:condition>
            <java:condition> 
          ConstantesINC.BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo())
        </java:condition>
            <java:condition> 
          ConstantesINC.TIPO_VENTA_CATALOGO.equals(con.getTipoVenta())
        </java:condition>
            <java:condition> 
          con.getIndFaltantesAnunciados()
        </java:condition>
            <java:condition> 
          !pos.getLimiteVenta() || pos.getLimiteVenta()
        </java:condition>
            <java:condition> 
          pos.getControlStock()
        </java:condition>
            <java:condition> 
          pos.getControlLiquidacion()
        </java:condition>
	<java:consequence>
		con.print("########   Consecuencia ProductosValidosBaseCalculoUnidadesFaltantesControlStockLiquidacion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
		PosicionPuntaje posicPunt = pos.getPosicionPuntaje(con.getOidConcurso());
		BigDecimal unidades = BigDecimal.valueOf(pos.getUnidadesComprometidas().longValue());
		BigDecimal monto = pos.getPrecioCatalogoUnitarioLocal().multiply(unidades);
		posicPunt.setMontoValido(monto);
		posicPunt.setUnidadesValidas(pos.getUnidadesComprometidas());
		double puntos = (posicPunt.getUnidadesValidas().longValue() / con.getFactorConversion().doubleValue());
		puntos = puntos * con.getPuntosAsignar().doubleValue();
		posicPunt.setPuntosValidos(new Double(puntos));	
		long unidades2 = pos.getUnidadesComprometidas().longValue() - pos.getUnidadesPorAtender().longValue();
		BigDecimal fc = new BigDecimal(con.getFactorConversion().doubleValue());
		BigDecimal result = new BigDecimal(unidades2).divide(fc,2,BigDecimal.ROUND_HALF_UP);
		result = result.multiply(new BigDecimal(con.getPuntosAsignar().doubleValue()));
		posicPunt.setPuntajeFaltanteNoAnunciado(new Double(result.doubleValue()));
	</java:consequence>
    </rule>

    <!--
                REGLA 69: ValidarPosicionAnuladaMontoRanking  
                @author Viviana Bongiovanni
                @date 02/08/2006
  -->
  <rule name="ValidarPosicionAnuladaMontoRanking">
    <parameter identifier="pos">
       <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
    </parameter>
    <parameter identifier="con">
       <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
    </parameter>
    <java:condition> 
        con.print("ValidarPosicionAnuladaMontoRanking")
    </java:condition>
    <java:condition> 
        !pos.getRechazada(con.getOidConcurso())
    </java:condition>        
    <java:condition>
        con.getIndRanking()
    </java:condition>
    <java:condition> 
      ConstantesINC.OID_FORMA_CALC_BASE_CALC.equals(con.getFormaCalculo())
    </java:condition> 
    <java:condition>
      (ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo()) || 
       ConstantesINC.OID_BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo()))
    </java:condition>
   <java:condition>
     (ConstantesPED.ESTADO_POSICION_ANULADO.equals(pos.getEstado()) || 
       ConstantesPED.ESTADO_POSICION_BLOQUEADO.equals(pos.getEstado()))
   </java:condition>
    <java:consequence>
      con.print("########   Consecuencia ValidarPosicionAnuladaMontoRanking  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
      pos.setRechazado(con.getOidConcurso());
      drools.modifyObject(sol);
    </java:consequence>
  </rule>

    <!--
              REGLA 70: ProductosReemplazoDevolucion
              @author Sergio Apaza
              @date 07/06/2011
     -->
    <rule name="ProductosReemplazoDevolucion" salience="50">
        <parameter identifier="pos">
            <java:class>es.indra.sicc.logicanegocio.inc.Posicion</java:class>
        </parameter>
        <parameter identifier="con">
            <java:class>es.indra.sicc.logicanegocio.inc.Concurso</java:class>
        </parameter>
        <java:condition> 
            con.print("ProductosReemplazoDevolucion")
        </java:condition>
        <java:condition> 
            !pos.getRechazada(con.getOidConcurso())
        </java:condition>
        <java:condition> 
            !pos.getSolicitudRechazado(con.getOidConcurso())
        </java:condition>
  	    <java:condition>
	         (ConstantesINC.OID_BASE_CALCULO_MONTO.equals(con.getBaseCalculo()) || 
	          ConstantesINC.OID_BASE_CALCULO_UNIDADES.equals(con.getBaseCalculo()))
	      </java:condition>
        <java:condition> 
            pos.isProductoReemplazo()
        </java:condition>
        <java:consequence>
	      	con.print("########   Consecuencia ProductosReemplazoDevolucion  concurso: " + con.getOidConcurso() + " , Solicitud: " + pos.getSolicitud().getOidSolicitud() + " , posicion: " + pos.getOidPosicion()); 
  	  	  pos.setRechazada(con.getOidConcurso());
    	  	drools.modifyObject(pos);
				</java:consequence>
    </rule>


</rule-set>