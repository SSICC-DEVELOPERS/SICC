<?xml version="1.0" encoding="UTF-8"?>  
<ReportSourceDefinition Id="RSD_REP-162" Cached="false" Expiration="0" IncrementalDimension="" Multilanguage="false" MaxRowsDimensionReference="" >  
	<DimensionSourceDefinitions>  
		<DimensionSourceDefinition Name="GRUPO1" Description="GRUPO1" DataType="STRING" Calculated="false" Expression="" ExternalData="GRUPO1"/>  
		<DimensionSourceDefinition Name="GRUPO2" Description="GRUPO2" DataType="STRING" Calculated="false" Expression="" ExternalData="GRUPO2"/>  
		<DimensionSourceDefinition Name="NEGOCIO_ACUM" Description="NEGOCIO_ACUM" DataType="STRING" Calculated="false" Expression="" ExternalData="NEGOCIO_ACUM"/>  
		<DimensionSourceDefinition Name="NEGOCIO_DIARIO" Description="NEGOCIO_DIARIO" DataType="STRING" Calculated="false" Expression="" ExternalData="NEGOCIO_DIARIO"/>  
	</DimensionSourceDefinitions>  
	<MetricSourceDefinitions>  
		<MetricSourceDefinition Name="MONTO_X_NEGOCIO_ACUM" Description="MONTO_X_NEGOCIO_ACUM" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="MONTO_X_NEGOCIO_ACUM" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="UNID_X_NEGOCIO_ACUM" Description="UNID_X_NEGOCIO_ACUM" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="UNID_X_NEGOCIO_ACUM" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="PORC_PART_NEGOCIO_ACUM" Description="PORC_PART_NEGOCIO_ACUM" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="PORC_PART_NEGOCIO_ACUM" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="PORC_VS_VENTA_NEGOCIO_ACUM" Description="PORC_VS_VENTA_NEGOCIO_ACUM" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="PORC_VS_VENTA_NEGOCIO_ACUM" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="MONTO_X_NEGOCIO_DIARIO" Description="MONTO_X_NEGOCIO_DIARIO" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="MONTO_X_NEGOCIO_DIARIO" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="UNID_X_NEGOCIO_DIARIO" Description="UNID_X_NEGOCIO_DIARIO" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="UNID_X_NEGOCIO_DIARIO" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="PORC_PART_NEGOCIO_DIARIO" Description="PORC_PART_NEGOCIO_DIARIO" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="PORC_PART_NEGOCIO_DIARIO" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="PORC_VS_VENTA_NEGOCIO_DIARIO" Description="PORC_VS_VENTA_NEGOCIO_DIARIO" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="PORC_VS_VENTA_NEGOCIO_DIARIO" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="TOTAL_FAL_ACUM_NEGOCIO" Description="TOTAL_FAL_ACUM_NEGOCIO" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="TOTAL_FAL_ACUM_NEGOCIO" ExternalCalculated="false"/>  
		<MetricSourceDefinition Name="TOTAL_FAL_DIARIO_NEGOCIO" Description="TOTAL_FAL_DIARIO_NEGOCIO" AggregateType="SUM" GroupFooterType="NONE" Calculated="false" AggregateFunction="" GroupFooterFunction="" ExternalData="TOTAL_FAL_DIARIO_NEGOCIO" ExternalCalculated="false"/>  
	</MetricSourceDefinitions>  
	<DataSourceDefinitions>  
		<DataSourceDefinition Name="REP-162" SourceType="SQL" Expression="  
SELECT *  
FROM   
(  
   SELECT *  
   FROM  
   (       
     SELECT ACUM.GRUPO1,  
            ACUM.GRUPO2,  
            ACUM.NEGOCIO NEGOCIO_ACUM,  
            ACUM.NEGOCIO NEGOCIO_DIARIO,  
   			    ACUM.MONTO_X_NEGOCIO MONTO_X_NEGOCIO_ACUM,  
            ACUM.UNID_X_NEGOCIO UNID_X_NEGOCIO_ACUM,  
            ROUND(ACUM.PORC_PART_NEGOCIO,2) PORC_PART_NEGOCIO_ACUM,   
            ROUND(ACUM.PORC_VS_VENTA_NEGOCIO,2) PORC_VS_VENTA_NEGOCIO_ACUM,  
            NVL(DIARIO.MONTO_X_NEGOCIO,0) MONTO_X_NEGOCIO_DIARIO,  
            NVL(DIARIO.UNID_X_NEGOCIO,0) UNID_X_NEGOCIO_DIARIO,  
            ROUND(NVL(DIARIO.PORC_PART_NEGOCIO,0),2) PORC_PART_NEGOCIO_DIARIO,   
            ROUND(NVL(DIARIO.PORC_VS_VENTA_NEGOCIO,0),2) PORC_VS_VENTA_NEGOCIO_DIARIO,  
            SUM(ACUM.MONTO_X_NEGOCIO) OVER (PARTITION BY 1) TOTAL_FAL_ACUM_NEGOCIO,  
            NVL(SUM(DIARIO.MONTO_X_NEGOCIO) OVER (PARTITION BY 1),0) TOTAL_FAL_DIARIO_NEGOCIO  
     FROM  
        (  
          SELECT 'MOVIM' AS GRUPO1,  
     	  		 'NEGOCIO' AS GRUPO2,  
                 NEGOCIO,  
                 SUM(UND_FALTANTES) UNID_X_NEGOCIO,  
                 SUM(MONTO_NETO) MONTO_X_NEGOCIO,  
                 DECODE(SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1),0,0,(SUM(UND_FALTANTES)/SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1))*100) PORC_PART_NEGOCIO,   
                 DECODE(SUM(UND_ATEN),0,0,(SUM(UND_FALTANTES)/SUM(UND_ATEN))*100) PORC_VS_VENTA_NEGOCIO  
          FROM  
             (  
                SELECT MPR.OID_PROD PROD,  
           			       PQ_APL_AUX.Valor_Gen_I18n_Sicc(%value_IDIOMAVALUE%,MPR.OID_PROD,'MAE_PRODU') DESC_PRODUCTO,  
                       SMP.DES_MARC_PROD MARCA_PRODUCTO,  
                       PQ_APL_AUX.Valor_Gen_I18n_Sicc(%value_IDIOMAVALUE%,NEG.OID_NEGO,'MAE_NEGOC') NEGOCIO,  
                       SUM((PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)*DECODE(PSP.VAL_PREC_CATA_UNIT_LOCA, 0, 0, PSP.VAL_PREC_NETO_UNIT_LOCA)) MONTO_NETO,                         
                       SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN) UND_FALTANTES,                         
                       SUM(PSP.NUM_UNID_ATEN) UND_ATEN      
                FROM PED_SOLIC_CABEC PSC,  
                     PED_SOLIC_POSIC PSP,  
                	   MAE_NEGOC NEG,  
                     MAE_UNIDA_NEGOC MUN,  
                     MAE_PRODU MPR,  
                     SEG_ACCES ACC,  
                     SEG_SUBAC SAC,  
                     SEG_MARCA_PRODU SMP,  
					           PED_TIPO_SOLIC_PAIS TSP,  
					           PED_TIPO_SOLIC PTS    
                WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE   
                  AND PSC.FEC_FACT =  (SELECT TO_DATE(%value_FECHAINICIOVALUE%,%value_FORMATOFECHAVALUE%) FROM DUAL)  
                  AND PSP.PROD_OID_PROD = MPR.OID_PROD  
                  AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO  
                  AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO  
                  AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD  
                  AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE  
                  AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                    
                  AND PSP.ESPO_OID_ESTA_POSI &lt;> 2  
                  AND PSC.IND_PEDI_PRUE &lt;> 1  
                  AND PSC.IND_TS_NO_CONSO = 1  
				          AND PSC.IND_OC = 1  
				          AND PSC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS  
				          AND TSP.TSOL_OID_TIPO_SOLI = PTS.OID_TIPO_SOLI  
				          AND PTS.IND_ANUL &lt;> 1  
				          AND PTS.IND_DEVO &lt;> 1  
                  AND PSC.PAIS_OID_PAIS = %value_PAISVALUE%                                 
                  AND PSC.PERD_OID_PERI = %value_PERIODOVALUE%                              
                  %start_NEGOCIOVALUES% AND NEG.OID_NEGO IN (%value_NEGOCIOVALUES%) %end_NEGOCIOVALUES%   
               	  %start_UNIDADNEGOCIOVALUES% AND MUN.OID_UNID_NEGO IN (%value_UNIDADNEGOCIOVALUES%) %end_UNIDADNEGOCIOVALUES%   
                  %start_CANALVALUE% AND ACC.CANA_OID_CANA = %value_CANALVALUE% %end_CANALVALUE%                                   
                  %start_ACCESOVALUE% AND ACC.OID_ACCE = %value_ACCESOVALUE% %end_ACCESOVALUE%                                         
                GROUP BY MPR.OID_PROD,  
                	  	 SMP.DES_MARC_PROD,  
                         NEG.OID_NEGO  
            )  
            GROUP BY NEGOCIO  
        ) DIARIO,  
        (  
            SELECT 'MOVIM' AS GRUPO1,  
                   'NEGOCIO' AS GRUPO2,  
                   NEGOCIO,  
                   SUM(UND_FALTANTES) UNID_X_NEGOCIO,  
                   SUM(MONTO_NETO)  MONTO_X_NEGOCIO,  
                   DECODE(SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1),0,0,(SUM(UND_FALTANTES)/SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1))*100) PORC_PART_NEGOCIO,   
                   DECODE(SUM(UND_ATEN) ,0,0,(SUM(UND_FALTANTES)/SUM(UND_ATEN))*100) PORC_VS_VENTA_NEGOCIO  
            FROM  
               (  
                   SELECT MPR.OID_PROD PROD,  
                          PQ_APL_AUX.Valor_Gen_I18n_Sicc(%value_IDIOMAVALUE%,MPR.OID_PROD,'MAE_PRODU') DESC_PRODUCTO,  
                          SMP.DES_MARC_PROD MARCA_PRODUCTO,  
                          PQ_APL_AUX.Valor_Gen_I18n_Sicc(%value_IDIOMAVALUE%,NEG.OID_NEGO,'MAE_NEGOC') NEGOCIO,  
                          SUM((PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)*DECODE(PSP.VAL_PREC_CATA_UNIT_LOCA, 0, 0, PSP.VAL_PREC_NETO_UNIT_LOCA)) MONTO_NETO,  
                          SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN) UND_FALTANTES,  
                          SUM(PSP.NUM_UNID_ATEN) UND_ATEN      
                   FROM PED_SOLIC_CABEC PSC,  
                        PED_SOLIC_POSIC PSP,  
                        MAE_NEGOC NEG,  
                        MAE_UNIDA_NEGOC MUN,  
                        MAE_PRODU MPR,  
                        SEG_ACCES ACC,  
                        SEG_SUBAC SAC,  
                        SEG_MARCA_PRODU SMP,  
						            PED_TIPO_SOLIC_PAIS TSP,  
					 	            PED_TIPO_SOLIC PTS  
                   WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE   
                     AND PSP.PROD_OID_PROD = MPR.OID_PROD  
                     AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO  
                     AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO  
                     AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD  
                     AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE  
                     AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                       
                     AND PSP.ESPO_OID_ESTA_POSI &lt;> 2  
                     AND PSC.IND_PEDI_PRUE &lt;> 1  
                     AND PSC.IND_TS_NO_CONSO = 1  
     			  	       AND PSC.IND_OC = 1  
				  	         AND PSC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS  
				  	         AND TSP.TSOL_OID_TIPO_SOLI = PTS.OID_TIPO_SOLI  
				  	         AND PTS.IND_ANUL &lt;> 1  
				  	         AND PTS.IND_DEVO &lt;> 1  
                     AND PSC.PAIS_OID_PAIS = %value_PAISVALUE%                                 
                     AND PSC.PERD_OID_PERI = %value_PERIODOVALUE%                              
                     AND PSC.FEC_FACT IS NOT NULL   
                    %start_NEGOCIOVALUES% AND NEG.OID_NEGO IN (%value_NEGOCIOVALUES%) %end_NEGOCIOVALUES%   
                    %start_UNIDADNEGOCIOVALUES% AND MUN.OID_UNID_NEGO IN (%value_UNIDADNEGOCIOVALUES%) %end_UNIDADNEGOCIOVALUES%   
                    %start_CANALVALUE% AND ACC.CANA_OID_CANA = %value_CANALVALUE% %end_CANALVALUE%                       
                    %start_ACCESOVALUE% AND ACC.OID_ACCE = %value_ACCESOVALUE% %end_ACCESOVALUE%                              
                GROUP BY MPR.OID_PROD,  
                         SMP.DES_MARC_PROD,  
				                 NEG.OID_NEGO  
                )  
             GROUP BY NEGOCIO  
          ) ACUM  
          WHERE DIARIO.GRUPO2(+) = ACUM.GRUPO2  
            AND DIARIO.NEGOCIO(+) = ACUM.NEGOCIO  
            AND ACUM.UNID_X_NEGOCIO > 0   
            AND DECODE(NVL(DIARIO.UNID_X_NEGOCIO, 1), 1, 1,DIARIO.UNID_X_NEGOCIO) > 0  
      )         
      UNION ALL       
      (         
          SELECT   
                 ACUM.GRUPO1,  
                 ACUM.GRUPO2,  
                 ACUM.MARCA_PRODUCTO MARCA_PRODUCTO_ACUM,  
                 ACUM.MARCA_PRODUCTO MARCA_PRODUCTO_DIARIO,  
                 ACUM.MONTO_X_MARCA MONTO_X_MARCA_ACUM,  
                 ACUM.UNID_X_MARCA UNID_X_MARCA_ACUM,  
                 ROUND(ACUM.PORC_PART_MARCA,2) PORC_PART_MARCA_ACUM,   
                 ROUND(ACUM.PORC_VS_VENTA_MARCA,2) PORC_VS_VENTA_MARCA_ACUM,  
                 NVL(DIARIO.MONTO_X_MARCA,0) MONTO_X_MARCA_DIARIO,  
                 NVL(DIARIO.UNID_X_MARCA,0) UNID_X_MARCA_DIARIO,  
                 ROUND(NVL(DIARIO.PORC_PART_MARCA,0),2) PORC_PART_MARCA_DIARIO,   
                 ROUND(NVL(DIARIO.PORC_VS_VENTA_MARCA,0),2) PORC_VS_VENTA_MARCA_DIARIO,  
                 SUM(ACUM.MONTO_X_MARCA) OVER (PARTITION BY 1) TOTAL_FAL_ACUM_MARCA,  
                 NVL(SUM(DIARIO.MONTO_X_MARCA) OVER (PARTITION BY 1),0) TOTAL_FAL_DIARIO_MARCA  
           FROM  
                (  
                 SELECT 'MOVIM' AS GRUPO1,  
                        'MARCA' AS GRUPO2,  
                        MARCA_PRODUCTO,  
                        SUM(UND_FALTANTES) UNID_X_MARCA,  
                        SUM(MONTO_NETO) MONTO_X_MARCA,  
                        DECODE(SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1),0,0,(SUM(UND_FALTANTES)/SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1))*100) PORC_PART_MARCA,   
                        DECODE(SUM(UND_ATEN),0,0,(SUM(UND_FALTANTES)/SUM(UND_ATEN))*100) PORC_VS_VENTA_MARCA  
                 FROM  
                     (  
                       SELECT   
                             MPR.OID_PROD PROD,  
                              PQ_APL_AUX.Valor_Gen_I18n_Sicc(%value_IDIOMAVALUE%,MPR.OID_PROD,'MAE_PRODU') DESC_PRODUCTO,  
                              SMP.DES_MARC_PROD MARCA_PRODUCTO,  
                              PQ_APL_AUX.Valor_Gen_I18n_Sicc(%value_IDIOMAVALUE%,NEG.OID_NEGO,'MAE_NEGOC') NEGOCIO,  
                              SUM((PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)*DECODE(psp.VAL_PREC_CATA_UNIT_LOCA, 0, 0, psp.VAL_PREC_NETO_UNIT_LOCA)) MONTO_NETO,                                
                              SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN) UND_FALTANTES,                                
                              SUM(PSP.NUM_UNID_ATEN) UND_ATEN      
                       FROM   
                            PED_SOLIC_CABEC PSC,  
                            PED_SOLIC_POSIC PSP,  
                            MAE_NEGOC NEG,  
                            MAE_UNIDA_NEGOC MUN,  
                            MAE_PRODU MPR,  
                            SEG_ACCES ACC,  
                            SEG_SUBAC SAC,  
                            SEG_MARCA_PRODU SMP,  
							              PED_TIPO_SOLIC_PAIS TSP,  
					 		              PED_TIPO_SOLIC PTS  
                       WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE   
                         AND PSC.FEC_FACT =  (SELECT TO_DATE(%value_FECHAINICIOVALUE%,%value_FORMATOFECHAVALUE%) FROM DUAL)  
                         AND PSP.PROD_OID_PROD = MPR.OID_PROD  
                         AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO  
                         AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO  
                         AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD  
                         AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE  
                         AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                           
          	             AND PSP.ESPO_OID_ESTA_POSI &lt;> 2  
                         AND PSC.IND_PEDI_PRUE &lt;> 1  
                         AND PSC.IND_TS_NO_CONSO = 1  
     		 	 	             AND PSC.IND_OC = 1  
				  	 	           AND PSC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS  
				  	 	           AND TSP.TSOL_OID_TIPO_SOLI = PTS.OID_TIPO_SOLI  
				  	 	           AND PTS.IND_ANUL &lt;> 1  
				  	 	           AND PTS.IND_DEVO &lt;> 1  
                         AND PSC.PAIS_OID_PAIS = %value_PAISVALUE%                  
                         AND PSC.PERD_OID_PERI = %value_PERIODOVALUE%               
                         %start_NEGOCIOVALUES% AND NEG.OID_NEGO IN (%value_NEGOCIOVALUES%) %end_NEGOCIOVALUES%      
                         %start_UNIDADNEGOCIOVALUES% AND MUN.OID_UNID_NEGO IN (%value_UNIDADNEGOCIOVALUES%) %end_UNIDADNEGOCIOVALUES%   
                         %start_CANALVALUE% AND ACC.CANA_OID_CANA = %value_CANALVALUE% %end_CANALVALUE%                                   
                         %start_ACCESOVALUE% AND ACC.OID_ACCE = %value_ACCESOVALUE% %end_ACCESOVALUE%                                         
                   GROUP BY   
                         MPR.OID_PROD,  
                         SMP.DES_MARC_PROD,  
					        NEG.OID_NEGO  
                )  
                GROUP BY MARCA_PRODUCTO  
            ) DIARIO,  
            (  
                SELECT   
                       'MOVIM' AS GRUPO1,  
                       'MARCA' AS GRUPO2,  
                       MARCA_PRODUCTO,  
                       SUM(UND_FALTANTES) UNID_X_MARCA,  
                       SUM(MONTO_NETO)  MONTO_X_MARCA,  
                       DECODE(SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1),0,0,(SUM(UND_FALTANTES)/SUM(SUM(UND_FALTANTES)) OVER (PARTITION BY 1))*100) PORC_PART_MARCA,   
                       DECODE(SUM(UND_ATEN) ,0,0,(SUM(UND_FALTANTES)/SUM(UND_ATEN))*100) PORC_VS_VENTA_MARCA  
                FROM  
                    (  
                       SELECT MPR.OID_PROD PROD,  
                              PQ_APL_AUX.Valor_Gen_I18n_Sicc(%value_IDIOMAVALUE%,MPR.OID_PROD,'MAE_PRODU') DESC_PRODUCTO,  
                              SMP.DES_MARC_PROD MARCA_PRODUCTO,  
                              PQ_APL_AUX.Valor_Gen_I18n_Sicc(%value_IDIOMAVALUE%,NEG.OID_NEGO,'MAE_NEGOC') NEGOCIO,  
                              SUM((PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)*DECODE(psp.VAL_PREC_CATA_UNIT_LOCA, 0, 0, psp.VAL_PREC_NETO_UNIT_LOCA)) MONTO_NETO,                                
                              SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN) UND_FALTANTES,                                
                              SUM(PSP.NUM_UNID_ATEN) UND_ATEN      
                       FROM PED_SOLIC_CABEC PSC,  
                            PED_SOLIC_POSIC PSP,  
                            MAE_NEGOC NEG,  
                            MAE_UNIDA_NEGOC MUN,  
                            MAE_PRODU MPR,  
                            SEG_ACCES ACC,  
                            SEG_SUBAC SAC,  
                            SEG_MARCA_PRODU SMP,  
 							              PED_TIPO_SOLIC_PAIS TSP,  
					 		              PED_TIPO_SOLIC PTS  
                       WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE   
                         AND PSP.PROD_OID_PROD = MPR.OID_PROD  
                         AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO  
                         AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO  
                         AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD  
                         AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE  
                         AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                           
                         AND PSP.ESPO_OID_ESTA_POSI &lt;> 2  
                         AND PSC.IND_PEDI_PRUE &lt;> 1  
                         AND PSC.IND_TS_NO_CONSO = 1  
     			 	             AND PSC.IND_OC = 1  
				  	 	           AND PSC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS  
				  	 	           AND TSP.TSOL_OID_TIPO_SOLI = PTS.OID_TIPO_SOLI  
				  	 	           AND PTS.IND_ANUL &lt;> 1  
				  	 	           AND PTS.IND_DEVO &lt;> 1  
                         AND PSC.PAIS_OID_PAIS = %value_PAISVALUE%                                 
                         AND PSC.PERD_OID_PERI = %value_PERIODOVALUE%                              
                         AND PSC.FEC_FACT IS NOT NULL  
                         %start_NEGOCIOVALUES% AND NEG.OID_NEGO IN (%value_NEGOCIOVALUES%) %end_NEGOCIOVALUES%        
                         %start_UNIDADNEGOCIOVALUES% AND MUN.OID_UNID_NEGO IN (%value_UNIDADNEGOCIOVALUES%) %end_UNIDADNEGOCIOVALUES%   
                         %start_CANALVALUE% AND ACC.CANA_OID_CANA = %value_CANALVALUE% %end_CANALVALUE%                                   
                         %start_ACCESOVALUE% AND ACC.OID_ACCE = %value_ACCESOVALUE% %end_ACCESOVALUE%                                         
                      GROUP BY MPR.OID_PROD,  
                               SMP.DES_MARC_PROD,  
						                   NEG.OID_NEGO  
                      )  
                   GROUP BY MARCA_PRODUCTO  
                  ) ACUM  
            WHERE DIARIO.GRUPO2(+) = ACUM.GRUPO2  
              AND DIARIO.MARCA_PRODUCTO(+) = ACUM.MARCA_PRODUCTO  
              AND DECODE(NVL(DIARIO.UNID_X_MARCA,1),1,1,DIARIO.UNID_X_MARCA) > 0  
              AND ACUM.UNID_X_MARCA > 0  
      )  
)  
UNION ALL  
(  
         SELECT   
              ACUM.GRUPO1,  
              ACUM.NEGOCIO NEGOCIO_ACUM,  
              ACUM.DESC_PRODUCTO DESC_PRODUCTO_ACUM,   
              DIARIO.DESC_PRODUCTO DESC_PRODUCTO_DIARIO,   
              ACUM.MONTO_NETO,  
              ACUM.UND_FALTANTES UND_FALTANTES_ACUM,  
              ROUND(ACUM.PORC_PART_PRODUCTO,2) PORC_PART_PRODUCTO_ACUM,  
              ROUND(ACUM.PORC_VENTA_PRODUCTO,2) PORC_VENTA_PRODUCTO_ACUM,  
              CASE WHEN (DIARIO.DESC_PRODUCTO IS NOT NULL)  THEN  
                    NVL(DIARIO.MONTO_NETO, 0)  
              END MONTO_NETO_DIARIO,  
              CASE WHEN (DIARIO.DESC_PRODUCTO IS NOT NULL)  THEN  
                    NVL(DIARIO.UND_FALTANTES, 0)  
              END UND_FALTANTES_DIARIO,  
              CASE WHEN (DIARIO.DESC_PRODUCTO IS NOT NULL)  THEN  
                     ROUND(NVL(DIARIO.PORC_PART_PRODUCTO, 0),2)   
              END PORC_PART_PRODUCTO_DIARIO,  
              CASE WHEN (DIARIO.DESC_PRODUCTO IS NOT NULL)  THEN  
                     ROUND(NVL(DIARIO.PORC_VENTA_PRODUCTO,0),2)   
              END PORC_VENTA_PRODUCTO_DIARIO,  
              NULL AS TOTAL1,  
              NULL AS TOTAL2  
         FROM  
              (  
              SELECT *  
              FROM  
              (  
                SELECT   
                    GRUPO1,                       
                    DESC_PRODUCTO,  
                    MARCA_PRODUCTO,  
                    NEGOCIO,  
                    MONTO_NETO,  
                    UND_FALTANTES,  
                    PORC_PART_PRODUCTO,                      
                    PORC_VENTA_PRODUCTO,  
                    SUM (1) OVER (PARTITION BY NEGOCIO ORDER BY MONTO_NETO DESC,OID_PROD) CONTROL  
                 FROM  
                 (  
                  SELECT 'PCRI' GRUPO1,  
                          MPR.OID_PROD,  
                          PQ_APL_AUX.VALOR_GEN_I18N_SICC(1,mpr.oid_prod,'MAE_PRODU') desc_producto,  
                          SMP.DES_MARC_PROD MARCA_PRODUCTO,  
                          PQ_APL_AUX.VALOR_GEN_I18N_SICC(1,mpr.nego_oid_nego,'MAE_NEGOC') negocio,  
                          SUM((PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)*DECODE(psp.VAL_PREC_CATA_UNIT_LOCA, 0, 0, psp.VAL_PREC_NETO_UNIT_LOCA)) MONTO_NETO,                            
                          SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN) UND_FALTANTES,                            
                          DECODE(SUM(SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)) OVER (PARTITION BY PQ_APL_AUX.VALOR_GEN_I18N_SICC(1,mpr.nego_oid_nego,'MAE_NEGOC')),0,0,(SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)/SUM(SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)) OVER (PARTITION BY PQ_APL_AUX.VALOR_GEN_I18N_SICC(1,mpr.nego_oid_nego,'MAE_NEGOC')))*100) PORC_PART_PRODUCTO,  
                          DECODE(SUM(PSP.NUM_UNID_ATEN),0,0,(SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)/SUM(PSP.NUM_UNID_ATEN))*100) PORC_VENTA_PRODUCTO  
                  FROM PED_SOLIC_CABEC PSC,  
                         PED_SOLIC_POSIC PSP,  
                         MAE_NEGOC NEG,  
                         MAE_UNIDA_NEGOC MUN,  
                         MAE_PRODU MPR,  
                         SEG_ACCES ACC,  
                         SEG_SUBAC SAC,  
                         SEG_MARCA_PRODU SMP,  
	 					             PED_TIPO_SOLIC_PAIS TSP,  
    					           PED_TIPO_SOLIC PTS  
                  WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE   
                          AND PSP.PROD_OID_PROD = MPR.OID_PROD  
                          AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO  
                          AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO  
                          AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD                            
                          AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE  
                          AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                            
                          AND PSP.ESPO_OID_ESTA_POSI &lt;> 2  
                          AND PSC.IND_PEDI_PRUE &lt;> 1  
                          AND PSC.IND_TS_NO_CONSO = 1  
     			  	 	          AND PSC.IND_OC = 1  
				  	 	            AND PSC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS  
				  	 	            AND TSP.TSOL_OID_TIPO_SOLI = PTS.OID_TIPO_SOLI  
				  	 	            AND PTS.IND_ANUL &lt;> 1  
				  	 	            AND PTS.IND_DEVO &lt;> 1  
                          AND PSC.PAIS_OID_PAIS = %value_PAISVALUE%                                
                          AND PSC.PERD_OID_PERI = %value_PERIODOVALUE%   
                          AND PSC.FEC_FACT IS NOT NULL  
                          %start_NEGOCIOVALUES% AND NEG.OID_NEGO IN (%value_NEGOCIOVALUES%) %end_NEGOCIOVALUES%    
                          %start_UNIDADNEGOCIOVALUES% AND MUN.OID_UNID_NEGO IN (%value_UNIDADNEGOCIOVALUES%) %end_UNIDADNEGOCIOVALUES%   
                          %start_CANALVALUE% AND ACC.CANA_OID_CANA = %value_CANALVALUE% %end_CANALVALUE%                                     
                          %start_ACCESOVALUE% AND ACC.OID_ACCE = %value_ACCESOVALUE% %end_ACCESOVALUE%                                      
                  GROUP BY                
                           MPR.OID_PROD,  
                           PQ_APL_AUX.VALOR_GEN_I18N_SICC(1,mpr.oid_prod,'MAE_PRODU'),   
                           SMP.DES_MARC_PROD,  
                           PQ_APL_AUX.VALOR_GEN_I18N_SICC(1,mpr.nego_oid_nego,'MAE_NEGOC')   
              )  
              WHERE UND_FALTANTES > 0  
            )  
            WHERE CONTROL &lt;= 8  
        ) ACUM,     
        (   
          SELECT * FROM  
          (          
            SELECT  
                    GRUPO1,                       
                    DESC_PRODUCTO,  
                    MARCA_PRODUCTO,  
                    NEGOCIO,  
                    MONTO_NETO,  
                    UND_FALTANTES,  
                    PORC_PART_PRODUCTO,                      
                    PORC_VENTA_PRODUCTO,  
                    SUM (1) OVER (PARTITION BY NEGOCIO ORDER BY MONTO_NETO DESC,OID_PROD) CONTROL  
             FROM(  
                  SELECT   
                           'PCRI' GRUPO1,  
                           MPR.OID_PROD,  
			                     gen_pro.val_i18n desc_producto,  
                           SMP.DES_MARC_PROD MARCA_PRODUCTO,  
			                     gen_neg.val_i18n negocio,  
                           SUM((PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)*DECODE(psp.VAL_PREC_CATA_UNIT_LOCA, 0, 0, psp.VAL_PREC_NETO_UNIT_LOCA)) MONTO_NETO,                            
                           SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN) UND_FALTANTES,                                                        
                           DECODE(SUM(SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)) OVER (PARTITION BY GEN_NEG.VAL_I18N),0,0,(SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)/SUM(SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)) OVER (PARTITION BY GEN_NEG.VAL_I18N))*100) PORC_PART_PRODUCTO,  
                           DECODE(SUM(PSP.NUM_UNID_ATEN),0,0,(SUM(PSP.NUM_UNID_DEMA_REAL-PSP.NUM_UNID_ATEN)/SUM(PSP.NUM_UNID_ATEN))*100) PORC_VENTA_PRODUCTO  
                  FROM PED_SOLIC_CABEC PSC,  
                         PED_SOLIC_POSIC PSP,  
                         MAE_NEGOC NEG,  
                         MAE_UNIDA_NEGOC MUN,  
                         MAE_PRODU MPR,  
                         SEG_ACCES ACC,  
                         SEG_SUBAC SAC,  
                         SEG_MARCA_PRODU SMP,  
	 					             PED_TIPO_SOLIC_PAIS TSP,  
						             PED_TIPO_SOLIC PTS,  
                                  (SELECT gen.val_i18n, gen.val_oid  
                                     FROM v_gen_i18n_sicc gen  
                                    WHERE gen.attr_enti = 'MAE_PRODU'  
                                      AND gen.idio_oid_idio = 1) gen_pro,  
                                  (SELECT gen.val_i18n, gen.val_oid  
                                     FROM v_gen_i18n_sicc gen  
                                    WHERE gen.attr_enti = 'MAE_NEGOC'  
                                      AND gen.idio_oid_idio = 1) gen_neg   
                  WHERE PSP.SOCA_OID_SOLI_CABE = PSC.OID_SOLI_CABE   
                          AND PSC.FEC_FACT = (SELECT TO_DATE(%value_FECHAINICIOVALUE%,%value_FORMATOFECHAVALUE%) FROM DUAL)  
                          AND PSP.PROD_OID_PROD = MPR.OID_PROD  
                          AND MPR.NEGO_OID_NEGO = NEG.OID_NEGO  
                          AND MPR.UNEG_OID_UNID_NEGO = MUN.OID_UNID_NEGO  
                          AND MPR.MAPR_OID_MARC_PROD = SMP.OID_MARC_PROD  
                          AND SAC.ACCE_OID_ACCE = ACC.OID_ACCE  
                          AND SAC.OID_SBAC = PSC.SBAC_OID_SBAC                            
                          AND PSP.ESPO_OID_ESTA_POSI &lt;> 2  
                          AND PSC.IND_PEDI_PRUE &lt;> 1  
                          AND PSC.IND_TS_NO_CONSO = 1  
     			  	 	          AND PSC.IND_OC = 1  
				  	 	            AND PSC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS  
				  	 	            AND TSP.TSOL_OID_TIPO_SOLI = PTS.OID_TIPO_SOLI  
				  	 	            AND PTS.IND_ANUL &lt;> 1  
				  	 	            AND PTS.IND_DEVO &lt;> 1  
                          AND PSC.PAIS_OID_PAIS = %value_PAISVALUE%      
                          AND PSC.PERD_OID_PERI = %value_PERIODOVALUE%  
                          %start_NEGOCIOVALUES% AND NEG.OID_NEGO IN (%value_NEGOCIOVALUES%) %end_NEGOCIOVALUES%   
                          %start_UNIDADNEGOCIOVALUES% AND MUN.OID_UNID_NEGO IN (%value_UNIDADNEGOCIOVALUES%) %end_UNIDADNEGOCIOVALUES%  
                          %start_CANALVALUE% AND ACC.CANA_OID_CANA = %value_CANALVALUE% %end_CANALVALUE%                                   
                          %start_ACCESOVALUE% AND ACC.OID_ACCE = %value_ACCESOVALUE% %end_ACCESOVALUE%                                    
                  GROUP BY                 
                           MPR.OID_PROD,  
                           GEN_PRO.VAL_I18N,  
                           SMP.DES_MARC_PROD,  
                           GEN_NEG.VAL_I18N  
              )  
              WHERE UND_FALTANTES > 0  
            )  
            WHERE CONTROL &lt;= 8  
      ) DIARIO  
WHERE ACUM.NEGOCIO = DIARIO.NEGOCIO(+)  
  AND ACUM.CONTROL = DIARIO.CONTROL(+)  
)   
" ExternalClassName="oracle.jdbc.driver.OracleDriver" ExternalSourceData="" ExternalConnectionString="" ExternalConnectionClassName="oracle.jdbc.driver.OracleDriver" ExternalConnectionLocalUrl="jdbc:oracle:thin:@cdos01bd:1523:SICCP" ExternalConnectionDistributedUrl="" ExternalConnectionUser="usu_peru" ExternalConnectionPassword="usu_peru" DatePattern="" DateTimePattern=""/>  
	</DataSourceDefinitions>  
	<FilterDefinitions>  
		<FilterDefinition DataType="INTEGER" FilterType="EQUALTO" Name="IDIOMA" Visual="FALSE"/>  
		<FilterDefinition DataType="INTEGER" FilterType="EQUALTO" Name="PAIS" Visual="FALSE"/>  
		<FilterDefinition DataType="INTEGER" FilterType="EQUALTO" Name="MARCA" Visual="FALSE"/>  
		<FilterDefinition DataType="INTEGER" FilterType="EQUALTO" Name="CANAL" Visual="FALSE"/>  
		<FilterDefinition DataType="INTEGER" FilterType="EQUALTO" Name="PERIODO" Visual="FALSE"/>  
		<FilterDefinition DataType="INTEGER" FilterType="EQUALTO" Name="ACCESO" Visual="FALSE"/>  
		<FilterDefinition DataType="INTEGER" FilterType="IN" Name="UNIDADNEGOCIO" Visual="FALSE"/>  
		<FilterDefinition DataType="INTEGER" FilterType="IN" Name="NEGOCIO" Visual="FALSE"/>  
		<FilterDefinition DataType="STRING" FilterType="EQUALTO" Name="FORMATOFECHA" Visual="FALSE"/>  
		<FilterDefinition DataType="DATE" FilterType="EQUALTO" Name="FECHAINICIO" Visual="FALSE"/>  
	</FilterDefinitions>  
	<ParameterValues>  
		<ParameterValue DefaultValue="1" FilterDefinitionName="IDIOMA" FilterParameter="VALUE"/>  
		<ParameterValue DefaultValue="1" FilterDefinitionName="PAIS" FilterParameter="VALUE"/>  
		<ParameterValue DefaultValue="1" FilterDefinitionName="MARCA" FilterParameter="VALUE"/>  
		<ParameterValue DefaultValue="1" FilterDefinitionName="CANAL" FilterParameter="VALUE"/>  
		<ParameterValue DefaultValue="57" FilterDefinitionName="PERIODO" FilterParameter="VALUE"/>  
		<ParameterValue DefaultValue="NULL_VALUE" FilterDefinitionName="ACCESO" FilterParameter="VALUE"/>  
		<ParameterValue DefaultValue="NULL_VALUE" FilterDefinitionName="UNIDADNEGOCIO" FilterParameter="VALUES"/>  
		<ParameterValue DefaultValue="NULL_VALUE" FilterDefinitionName="NEGOCIO" FilterParameter="VALUES"/>  
		<ParameterValue DefaultValue="01/01/2000" FilterDefinitionName="FECHAINICIO" FilterParameter="VALUE"/>  
		<ParameterValue DefaultValue="dd/MM/yyyy" FilterDefinitionName="FORMATOFECHA" FilterParameter="VALUE"/>  
	</ParameterValues>  
</ReportSourceDefinition>  

